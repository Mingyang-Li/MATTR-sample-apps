{
	"info": {
		"_postman_id": "6e3cc8dc-67f0-43a1-bf3b-740c5bdae7ec",
		"name": "Platform Core API",
		"description": "# Introduction\nThe Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\nThe API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n# Authorization\nAccess to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\nThis token is then used in an `authorization` header on all calls idenitfied as requiring `bearerAuth` (this is required for the majorty of management operations).\n\n<SecurityDefinitions />\n\n# Pagination\nMost list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters. \n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://tenant.platform.mattr.global/v1/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n* The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\nRequesting a page after the last value in the list will return an empty `data` object.\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n\nContact Support:\n Email: support@mattr.global",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Security",
			"item": [
				{
					"name": "Create API Auth Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"<string>\",\n    \"client_secret\": \"<string>\",\n    \"audience\": \"<string>\",\n    \"grant_type\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{oauth-token-Url}}/oauth/token",
							"host": [
								"{{oauth-token-Url}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\nYou will be provided the required `client_id` and `client_secret` as part of onboarding."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"htf792W4p4MedZbnoWAs51EfqUt4d2\",\n    \"client_secret\": \"d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\",\n    \"audience\": \"https://platform.mattr.global\",\n    \"grant_type\": \"client_credentials\"\n}"
								},
								"url": {
									"raw": "{{oauth-token-Url}}/oauth/token",
									"host": [
										"{{oauth-token-Url}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"s2dgbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6s2dcaEROemRDf5gbRVEwTTVSVFE0TmtZME9UZzVNVEpDTlVJNFJqRTBPREExTmpZMk1qazFPQSJ9.eyJodHRwOi8vbWF0dHIvdGVuYW50LWlkIjoiZWI5ZTdiMTQtMzY2ZS00NzAxLTg4OTctMTIwZmI5MTQ0YmFjIiwiaXNzIjoiaHR0cHM6Ly9tYXR0ci1wcm9kLmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJSZUhOOTJXNHA0TWVkWmJub1dBczUxRWZxVXQ0VDk2Y0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9wbGF0Zm9ybS5tYXR0ci5nbG9iYWwiLCJpYXQiOjE1OTE4NDk4MTMsImV4cCI6MTU5MTkzNjIxMywiYXpwIjoiUmVITjkyVzRwNE1lZFpibm9XQXM1MUVmcVV0NFQ5NmMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.kZt6mteIwNqdXO8CjqnsjENCgMV2-v7VMn2gtiqIuTNSxBZxk1OkeXERMuRcZpxqIjXi7SdHshQZ9wG_Cmrns_7bG5Pq-qiKCjDOK3pi6smvws02GmDH9nK4_el9zJ92_bDA0p4T6pT0ldcSAMya7ZwTz3-PYQ3pwCwiDEMWFXPtGilfHTBDmrzCUcanmErhZcopo8agtnozuIkbdZoKGkEdXO2J59PrAerBwIbhoYYgkreWIZtlbhGHueYj43ymDOHHl3I7s7zAuK1geJX4W3baKzTMPncUyGrHrOS6OI-ZodHs7kDhTyghJ13GxRy9ikAI3mXz79plZw0qxys2ed\",\n \"expires_in\": 86400,\n \"token_type\": \"Bearer\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"htf792W4p4MedZbnoWAs51EfqUt4d2\",\n    \"client_secret\": \"d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\",\n    \"audience\": \"https://platform.mattr.global\",\n    \"grant_type\": \"client_credentials\"\n}"
								},
								"url": {
									"raw": "{{oauth-token-Url}}/oauth/token",
									"host": [
										"{{oauth-token-Url}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"access_denied\",\n \"error_description\": \"Unauthorized\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DIDs",
			"item": [
				{
					"name": "Well Known DID Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/did-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"did-configuration"
							]
						},
						"description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant.\n\nSee https://identity.foundation/.well-known/resources/did-configuration/\n\nThese entries are automatically configured for **all** DIDs created by the tenant and is used for any party wanting to establish the relationship between domain ownership and the DIDs by exposing cryptographic proofs.\n\nThis endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomian or alias by any party wishing to discover the domain to DID relationship.\n"
					},
					"response": [
						{
							"name": "List of DID Configuration entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/.well-known/did-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										".well-known",
										"did-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"entries\": [\n  {\n   \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld\"\n   ],\n   \"type\": [\n    \"VerifiableCredential\",\n    \"DomainLinkageCredential\"\n   ],\n   \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n   \"issuanceDate\": \"2020-11-01T21:33:38.398Z\",\n   \"credentialSubject\": {\n    \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n    \"origin\": \"tenant.platform.mattr.global\"\n   },\n   \"proof\": {\n    \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..sOuFZV7lrUdxzOaRrCYoD9bbgxp3oEX1fceFFwxekjvJBzbI_ZzKL8-vPWOoFY200KTPwLYcEPhto0GQfM0iDg\",\n    \"type\": \"Ed25519Signature2018\",\n    \"created\": \"2020-11-01T21:33:38Z\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n   }\n  },\n  {\n   \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://w3c-ccg.github.io/ldp-bbs2020/context/v1\",\n    \"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld\"\n   ],\n   \"type\": [\n    \"VerifiableCredential\",\n    \"DomainLinkageCredential\"\n   ],\n   \"issuer\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v\",\n   \"issuanceDate\": \"2020-11-01T21:33:38.427Z\",\n   \"credentialSubject\": {\n    \"id\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v\",\n    \"origin\": \"product-team.platform.staging.mattrlabs.io\"\n   },\n   \"proof\": {\n    \"type\": \"BbsBlsSignature2020\",\n    \"created\": \"2020-11-01T21:33:38Z\",\n    \"proofValue\": \"itoN9nPf6ut0/IxkNp+qesJOju9hV1BYxFMkP4VynqUxFalmQV4PQ6wJhqz5KJppC39+VL+19CxVjPXUXaIDVGRs7WPDGbLaGeViu1Mm4nZCgJbptdw8HOkkpZZ21SCaTN+bok2IG5XRH+QsBWH/cA==\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v#zUC75v2eWSVhTC9XtyYci1cdrHNze4Wwzgv92GUDXeYQEkfZuu2CavRBVFkk9mnpToxiUMacjgYAx9JBmuoJXWc7YCRDDjTD5ocunta9DJrdmgCdAmuFCUfBPTo4GAnTY7x4582\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Resolve a DID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids",
								":id"
							],
							"variable": [
								{
									"id": "e2b54bd4-17db-4bbd-bca6-a48f5b7e6c20",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Single DID urn"
								}
							]
						},
						"description": "Resolves the DID provided in the path to its DID Document from the DID method and method identifier. The DID Document may contain cryptographic material like a public key and service endpoints.\n\nExample:\n\n`did:sov:1234556` -  will be referenced on the Sovrin network\n`did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9` - the public key is encapsulated in the DID\n\n#### Returns\n\nThe DID Document is returned along with meta-data already held about the DID by the tenant;\n- Registration Status: Given there can be a lag in writing on-ledger DIDs this status will be updated over a short timeframe (usually within 10 minutes).\n- Registered: Timestamp of registration.\n- Keys: A reference to the Keys in a KMS"
					},
					"response": [
						{
							"name": "A DID Document and meta-data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"didDocument\": {\n  \"@context\": \"https://w3.org/ns/did/v1\",\n  \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n  \"publicKey\": [\n   {\n    \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"type\": \"Ed25519VerificationKey2018\",\n    \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n   }\n  ],\n  \"authentication\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"assertionMethod\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"capabilityDelegation\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"capabilityInvocation\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"keyAgreement\": [\n   {\n    \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n    \"type\": \"X25519KeyAgreementKey2019\",\n    \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n   }\n  ]\n },\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\",\n    \"didDocumentKeyId\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   }\n  ],\n  \"registered\": 1588562204304\n }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				},
				{
					"name": "Delete a DID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids",
								":id"
							],
							"variable": [
								{
									"id": "a15f638b-a440-48f3-9b74-de237ba2df63",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Single DID urn"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						},
						{
							"name": "DID successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve a List of DIDs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids?limit=<number>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned DIDs, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of DIDs"
								}
							]
						},
						"description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n"
					},
					"response": [
						{
							"name": "A list of DIDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"did\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n   \"localMetadata\": {\n    \"keys\": [\n     {\n      \"kmsKeyId\": \"5jFLoKmMPgqWaV1Ler5yaECr6XjDX6DPymZhYpVnLDVh\",\n      \"didDocumentKeyId\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n     }\n    ],\n    \"registered\": 1586312761694\n   }\n  },\n  {\n   \"did\": \"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\",\n   \"localMetadata\": {\n    \"keys\": [\n     {\n      \"kmsKeyId\": \"2ezhxiEP6mgmMoWwaa3KJqS6GhPfYHpQTKvCAtPYCib5\",\n      \"didDocumentKeyId\": \"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT#z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\"\n     }\n    ],\n    \"registered\": 1586841097944\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a DID Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"<string>\",\n    \"options\": \"<object>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/dids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							]
						},
						"description": "Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\nMethods supported:\n- key\n- web\n- sov\n\n> During Preview any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n#### Creating did:key\nA DID with a DID method of key can be created as follows.\n\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\nIf no options are provided, a DID will be created with an ed25519 key type.\n\nIf the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n> A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n#### Creating did:web\nA DID with a DID method of web can be created as follows.\n\n* `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\nThe returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\nWhen the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\nOnce the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\nNote that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.platform.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n#### Creating did:sov\nA DID with a DID method of sov can be created as follows.\n\n* `{\"method\": \"sov\"}`\n\nThe Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n\n#### Returns\nThe DID, associated metadata and registration status.\n\nUnsupported Methods result in a 400 response with an \"Invalid value\" message."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Bad Request\",\n \"details\": [\n  {\n   \"value\": \"xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"method\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "DID document created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"did\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\",\n    \"didDocumentKeyId\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\"\n   }\n  ],\n  \"registered\": 1588741969938,\n  \"initialDidDocument\": {\n   \"@context\": \"https://w3.org/ns/did/v1\",\n   \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n   \"publicKey\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"type\": \"Ed25519VerificationKey2018\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n    }\n   ],\n   \"authentication\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"assertionMethod\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityDelegation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityInvocation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"keyAgreement\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n     \"type\": \"X25519KeyAgreementKey2019\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n    }\n   ]\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Create a DID Key BLS for ZKP Enabled",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"<string>\",\n    \"options\": \"<object>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/dids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							]
						},
						"description": "Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\nMethods supported:\n- key\n- web\n- sov\n\n> During Preview any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n#### Creating did:key\nA DID with a DID method of key can be created as follows.\n\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\nIf no options are provided, a DID will be created with an ed25519 key type.\n\nIf the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n> A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n#### Creating did:web\nA DID with a DID method of web can be created as follows.\n\n* `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\nThe returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\nWhen the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\nOnce the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\nNote that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.platform.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n#### Creating did:sov\nA DID with a DID method of sov can be created as follows.\n\n* `{\"method\": \"sov\"}`\n\nThe Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n\n#### Returns\nThe DID, associated metadata and registration status.\n\nUnsupported Methods result in a 400 response with an \"Invalid value\" message."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Bad Request\",\n \"details\": [\n  {\n   \"value\": \"xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"method\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "DID document created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"did\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\",\n    \"didDocumentKeyId\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\"\n   }\n  ],\n  \"registered\": 1588741969938,\n  \"initialDidDocument\": {\n   \"@context\": \"https://w3.org/ns/did/v1\",\n   \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n   \"publicKey\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"type\": \"Ed25519VerificationKey2018\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n    }\n   ],\n   \"authentication\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"assertionMethod\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityDelegation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityInvocation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"keyAgreement\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n     \"type\": \"X25519KeyAgreementKey2019\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n    }\n   ]\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Create a DID Web",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"<string>\",\n    \"options\": \"<object>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/dids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							]
						},
						"description": "Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\nMethods supported:\n- key\n- web\n- sov\n\n> During Preview any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n#### Creating did:key\nA DID with a DID method of key can be created as follows.\n\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\nIf no options are provided, a DID will be created with an ed25519 key type.\n\nIf the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n> A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n#### Creating did:web\nA DID with a DID method of web can be created as follows.\n\n* `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\nThe returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\nWhen the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\nOnce the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\nNote that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.platform.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n#### Creating did:sov\nA DID with a DID method of sov can be created as follows.\n\n* `{\"method\": \"sov\"}`\n\nThe Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n\n#### Returns\nThe DID, associated metadata and registration status.\n\nUnsupported Methods result in a 400 response with an \"Invalid value\" message."
					},
					"response": [
						{
							"name": "DID document created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"did\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\",\n    \"didDocumentKeyId\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\"\n   }\n  ],\n  \"registered\": 1588741969938,\n  \"initialDidDocument\": {\n   \"@context\": \"https://w3.org/ns/did/v1\",\n   \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n   \"publicKey\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"type\": \"Ed25519VerificationKey2018\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n    }\n   ],\n   \"authentication\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"assertionMethod\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityDelegation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityInvocation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"keyAgreement\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n     \"type\": \"X25519KeyAgreementKey2019\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n    }\n   ]\n  }\n }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Bad Request\",\n \"details\": [\n  {\n   \"value\": \"xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"method\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Messaging",
			"item": [
				{
					"name": "Create a JWS with a DID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"didUrl\": \"<string>\",\n    \"payload\": \"<object>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"sign"
							]
						},
						"description": "Creates a signed message in the form of a JWS (JSON Web Signature) using the DID (Decentralized Identifier) supplied in the request.\n\n#### Returns\n\nA JWS in compact serialization form signed by the did supplied in the request"
					},
					"response": [
						{
							"name": "Error signing message",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"didUrl\": \"did:example:abcdefghijkl#key1\",\n    \"payload\": {\n        \"msg\": \"this is a message\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"sign"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Message signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"didUrl\": \"did:example:abcdefghijkl#key1\",\n    \"payload\": {\n        \"msg\": \"this is a message\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"sign"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg\""
						}
					]
				},
				{
					"name": "Verify a JWS signed by a DID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jws\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"verify"
							]
						},
						"description": "Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n#### Returns\n\nIndicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\nThe DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation."
					},
					"response": [
						{
							"name": "Invalid JWS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Verification failed\"\n}"
						},
						{
							"name": "Verification has been performed, see response body for result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": \"payload\",\n \"didUrl\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"did\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"verified\": true\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Retrieve List of Credential Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials?tag=<string>&type=<string>&limit=<number>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials"
							],
							"query": [
								{
									"key": "tag",
									"value": "<string>",
									"description": "The optional external reference to filter on"
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The optional credential type to filter on"
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned credential entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of credential entries"
								}
							]
						},
						"description": "Returns a list of all credential data stored in the tenant.\n\n**In the list**\n\nInside the `data` array, there is an body for each credential issued on the platform, in addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge are set not to be persisted.\n\n**Pagination**\n\nPagination can be controlled by a cursor method using the `cursor`and `limit` query parameters. The `nextCursor` is found at the start of each returned range of credential entries and the `limit` determines how many entries are returned in that request, with a maximum value of `1000`.\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n> The optional `tag` filter or the Credential `type` can be used to retrieve credential data.\n"
					},
					"response": [
						{
							"name": "Returns a page of credentials",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials?tag=identifier123&type=AlumniCredential&limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									],
									"query": [
										{
											"key": "tag",
											"value": "identifier123"
										},
										{
											"key": "type",
											"value": "AlumniCredential"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"id\": \"873277c0-a162-11ea-8a1d-a111119347e6\",\n   \"credential\": {\n    \"@context\": [\n     \"https://www.w3.org/2018/credentials/v1\",\n     \"https://schema.org\"\n    ],\n    \"type\": [\n     \"VerifiableCredential\",\n     \"AlumniCredential\"\n    ],\n    \"issuer\": {\n     \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n     \"name\": \"https://tenant.platform.mattr.global\"\n    },\n    \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n    \"credentialSubject\": {\n     \"id\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n     \"givenName\": \"Jamie\",\n     \"familyName\": \"Doe\"\n    },\n    \"proof\": {\n     \"type\": \"Ed25519Signature2018\",\n     \"created\": \"2020-05-02T12:06:29Z\",\n     \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n     \"proofPurpose\": \"assertionMethod\",\n     \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\"\n    }\n   },\n   \"tag\": \"identifier123\",\n   \"issuanceDate\": \"2020-05-02T12:06:29.156Z\"\n  },\n  {\n   \"id\": \"9043aa74-eb08-11ea-adc1-0242ac120002\",\n   \"tag\": \"identifier124\",\n   \"credentialStatus\": {\n    \"id\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n    \"type\": \"RevocationList2020Status\",\n    \"revocationListCredential\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n    \"revocationListIndex\": 1\n   },\n   \"issuanceDate\": \"2020-10-06T03:21:02.397Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad query parameters in request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials?tag=identifier123&type=AlumniCredential&limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									],
									"query": [
										{
											"key": "tag",
											"value": "identifier123"
										},
										{
											"key": "type",
											"value": "AlumniCredential"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"xxxx\",\n   \"msg\": \"id and createdAt is missing\",\n   \"param\": \"cursor\",\n   \"location\": \"query\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Credential Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id"
							],
							"variable": [
								{
									"id": "3a5fbd6b-3338-4abc-8b39-ddc66408d3be",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Get data for a previously created credential using its ID.\n\nIn addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge do not have their contents persisted."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Credential returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"873277c0-a162-11ea-8a1d-a111119347e6\",\n \"credential\": {\n  \"@context\": [\n   \"https://www.w3.org/2018/credentials/v1\",\n   \"https://schema.org\"\n  ],\n  \"type\": [\n   \"VerifiableCredential\",\n   \"AlumniCredential\"\n  ],\n  \"issuer\": {\n   \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n   \"name\": \"https://tenant.platform.mattr.global\"\n  },\n  \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n  \"credentialStatus\": {\n   \"id\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n   \"type\": \"RevocationList2020Status\",\n   \"revocationListCredential\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n   \"revocationListIndex\": 4\n  },\n  \"credentialSubject\": {\n   \"id\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n   \"givenName\": \"Jamie\",\n   \"familyName\": \"Doe\"\n  },\n  \"proof\": {\n   \"type\": \"Ed25519Signature2018\",\n   \"created\": \"2020-05-02T12:06:29Z\",\n   \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n   \"proofPurpose\": \"assertionMethod\",\n   \"verificationMethod\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\"\n  }\n },\n \"tag\": \"identifier123\",\n \"credentialStatus\": {\n  \"id\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n  \"type\": \"RevocationList2020Status\",\n  \"revocationListCredential\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n  \"revocationListIndex\": 4\n },\n \"issuanceDate\": \"2020-05-02T12:06:29.156Z\"\n}"
						},
						{
							"name": "Credential ID not in a UUID format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Remove Credential Data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id"
							],
							"variable": [
								{
									"id": "ba2ea6d7-86b2-4796-a90a-5c8bd29195a1",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Remove all stored credential data from the tenant using its ID.\n\n> The entire entry including meta-data and the credential contents is removed from the system and cannot be recovered."
					},
					"response": [
						{
							"name": "Credential deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Credential ID not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Invalid id parameter format",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Retrieve List of Offers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"offers"
							]
						},
						"description": "Retrieve a list of all Credential Offers\n\n\n#### Returns\nThe entire list of all Credential Offers in the tenant"
					},
					"response": [
						{
							"name": "All offers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"domain\": \"tenant.platform.mattr.global\",\n  \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47051\",\n  \"purpose\": \"credential_offer\",\n  \"type\": [\n   \"AlumniCredential\"\n  ],\n  \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n  \"issuerDescription\": \"My Issuer\",\n  \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n  \"credentialDescription\": \"University Attendance Credential\",\n  \"claims\": {\n   \"credential\": {\n    \"https://schema.org/givenName\": {\n     \"essential\": true\n    },\n    \"https://schema.org/familyName\": {\n     \"essential\": true\n    },\n    \"https://issuer.example.com/alumniOf\": {\n     \"essential\": true\n    }\n   }\n  }\n },\n {\n  \"offerId\": \"7950c790-ac36-11ea-9aad-79943aa821f0\",\n  \"purpose\": \"credential_offer\",\n  \"domain\": \"tenant.platform.mattr.global\",\n  \"issuerDid\": \"did:key:z6MkreuqFq6WrwozTeGKuUDz8bnd2#lF9g8f3ZB862YdLp7v\",\n  \"issuerDescription\": \"Another Issuer\",\n  \"provider\": \"0a79d3b0-a160-11ea-8fcb-4553dffda6c5\",\n  \"credentialDescription\": \"Email Address Credential\",\n  \"claims\": {\n   \"credential\": {\n    \"http://schema.org/email\": {\n     \"essential\": true\n    }\n   }\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Retrieve an Offer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/offers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"offers",
								":id"
							],
							"variable": [
								{
									"id": "9dcc230f-ed9f-4773-815f-a5001417488f",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Offer ID"
								}
							]
						},
						"description": "Retrieve a Credential Offer by providing an Offer ID.\n\n> This is a publically available endpoint that can be called by any client that has been provided the URL, i.e. via a QR code or deep link.\n\nThe Offer `id` must be formatted as a UUID.\n\n#### Returns\nThe entire Credential Offer object"
					},
					"response": [
						{
							"name": "The Offer is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Could not find offer\",\n \"details\": {\n  \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47052\"\n }\n}"
						},
						{
							"name": "Offer returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domain\": \"tenant.platform.mattr.global\",\n \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47051\",\n \"purpose\": \"credential_offer\",\n \"type\": [\n  \"AlumniCredential\"\n ],\n \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n \"issuerDescription\": \"My Issuer\",\n \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n \"credentialDescription\": \"University Attendance Credential\",\n \"claims\": {\n  \"credential\": {\n   \"https://schema.org/givenName\": {\n    \"essential\": true\n   },\n   \"https://schema.org/familyName\": {\n    \"essential\": true\n   },\n   \"https://issuer.example.com/alumniOf\": {\n    \"essential\": true\n   }\n  }\n }\n}"
						},
						{
							"name": "The Offer `id` parameter is not an UUID format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Bad Request\",\n \"details\": [\n  {\n   \"value\": \"ac337ea20-xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"offerId\",\n   \"location\": \"params\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove an Offer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/offers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"offers",
								":id"
							],
							"variable": [
								{
									"id": "4715522b-07c5-42d4-9a62-9646761eb47d",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Offer ID"
								}
							]
						},
						"description": "Removes a Credential Offer by providing an Offer ID.\n\nThe Offer `id` must be formatted as a UUID.\n"
					},
					"response": [
						{
							"name": "Offer deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The Offer `id` parameter is not an UUID format",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"5265c310-xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"offerId\",\n   \"location\": \"params\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Verifiable Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"subjectId\": \"<string>\",\n    \"type\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"claims\": \"<object>\",\n    \"issuer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"tag\": \"<string>\",\n    \"persist\": \"<boolean>\",\n    \"revocable\": \"<boolean>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials"
							]
						},
						"description": "Creates a Verifiable Credential (VC or just Credential) in a JSON-LD format adhering to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n**Pre-requisites:**\n\nIn general, the SubjectId should have been authentically bound to the subject information made in the claims, for example by using an OpenID Connect authentication flow.\n\n**Creating the Payload:**\n\nThe Credential is issued using JSON-LD, the `@context` values and the `type` values must be represented so that the claims can be referenced.\n> The schema `https://www3.org/2018/credentials/v1` is always required in addition any `@context` values, so that the Credential can be referenced.\n\n> The `type` value of `VerifiableCredential` must be used as the *first* value in the array to conform to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n**ZKP-enabled BBS+ credential:**\n\nIf you wish to issue a ZKP-enabled Verifiable Credential, the provided `issuer` `id` must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential. Note that the schema `https://w3c-ccg.github.io/ldp-bbs2020/context/v1` will automatically be added to the `@context` in the credential.\n\n> During Preview this feature is experimental. It may change over time and may require credentials to be reissued.\n\n**Credential meta-data:**\n\nSetting the `persist` value to `true` will store the entire credential contents as well as the meta-data on the platform. If set to `false` only the credential meta-data is held on the platform:\n- `id`\n- `tag` (optional)\n- `credentialStatus` (optional)\n- `issuanceDate`\n\nThe optional `tag` value can be used to externally reference the issued credential.\n\n#### Returns\nOn success, the Verifiable Credential is always provided in the response along with meta-data.\nThe returned credential should be delivered to the intended Subject.\n"
					},
					"response": [
						{
							"name": "Credential created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://schema.org\"\n    ],\n    \"subjectId\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n    \"type\": [\n        \"VerifiableCredential\",\n        \"AlumniCredential\"\n    ],\n    \"claims\": {\n        \"givenName\": \"Jamie\",\n        \"familyName\": \"Doe\",\n        \"alumniOf\": \"Example University\"\n    },\n    \"issuer\": {\n        \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"Example University\"\n    },\n    \"persist\": true,\n    \"tag\": \"identifier123\",\n    \"revocable\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"231ce576-99ba-466c-855d-0e3cdf770aa6\",\n \"credential\": {\n  \"@context\": [\n   \"https://www.w3.org/2018/credentials/v1\",\n   \"https://www.w3.org/2018/credentials/examples/v1\"\n  ],\n  \"type\": [\n   \"VerifiableCredential\",\n   \"AlumniCredential\"\n  ],\n  \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n  \"credentialSubject\": {\n   \"givenName\": \"Jamie\",\n   \"familyName\": \"Doe\"\n  },\n  \"proof\": {\n   \"type\": \"Ed25519Signature2018\",\n   \"created\": \"2020-05-02T12:06:29Z\",\n   \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n   \"proofPurpose\": \"assertionMethod\",\n   \"verificationMethod\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\"\n  },\n  \"issuer\": {\n   \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n   \"name\": \"Example University\"\n  },\n  \"credentialStatus\": {\n   \"id\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n   \"type\": \"RevocationList2020Status\",\n   \"revocationListIndex\": 1,\n   \"revocationListCredential\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\"\n  }\n },\n \"tag\": \"identifier123\"\n}"
						},
						{
							"name": "Bad request, Invalid request body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://schema.org\"\n    ],\n    \"subjectId\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n    \"type\": [\n        \"VerifiableCredential\",\n        \"AlumniCredential\"\n    ],\n    \"claims\": {\n        \"givenName\": \"Jamie\",\n        \"familyName\": \"Doe\",\n        \"alumniOf\": \"Example University\"\n    },\n    \"issuer\": {\n        \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"Example University\"\n    },\n    \"persist\": true,\n    \"tag\": \"identifier123\",\n    \"revocable\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Create an Offer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issuerDid\": \"<string>\",\n    \"issuerDescription\": \"<string>\",\n    \"provider\": \"<uuid>\",\n    \"credentialDescription\": \"<string>\",\n    \"claims\": {\n        \"credential\": \"<object>\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/offers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"offers"
							]
						},
						"description": "Creates and stores a Credential Offer, returns the Credential Offer with the Offer ID.\n\nIt contain values that can be used for display purposes in a client, like a Mobile Wallet, and essential values required.\n\nThe Offer ID is required to fetch the Offer, which is useful when creating a credential since the credential offer can act as a template for the credential that is being constructed.\n\n* The `issuerDid` must exist in the tenant.\n* The provider must match the ID of a federated OpenID Provider that is configured in the tenant.\n\n**ZKP-enabled BBS+ credential:**\nIf you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n> ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n\n#### Returns\n\nThe Offer ID can be used to be encapsulated in a QR Code or deep link and a mobile wallet or other client can resolve this Offer ID to get the full Credential Offer details.\n"
					},
					"response": [
						{
							"name": "Bad request, an error in the request body, see message and details for information",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n    \"issuerDescription\": \"My Issuer\",\n    \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n    \"credentialDescription\": \"University Attendance Credential\",\n    \"claims\": {\n        \"credential\": {\n            \"https://schema.org/givenName\": {\n                \"essential\": true\n            },\n            \"https://schema.org/familyName\": {\n                \"essential\": true\n            },\n            \"https://issuer.example.com/alumniOf\": {\n                \"essential\": true\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Could not find did\",\n \"details\": {\n  \"did\": \"did:key:xxx\"\n }\n}"
						},
						{
							"name": "Credential offer created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n    \"issuerDescription\": \"My Issuer\",\n    \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n    \"credentialDescription\": \"University Attendance Credential\",\n    \"claims\": {\n        \"credential\": {\n            \"https://schema.org/givenName\": {\n                \"essential\": true\n            },\n            \"https://schema.org/familyName\": {\n                \"essential\": true\n            },\n            \"https://issuer.example.com/alumniOf\": {\n                \"essential\": true\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domain\": \"tenant.platform.mattr.global\",\n \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47051\",\n \"purpose\": \"credential_offer\",\n \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n \"issuerDescription\": \"My Issuer\",\n \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n \"credentialDescription\": \"University Attendance Credential\",\n \"claims\": {\n  \"credential\": {\n   \"https://schema.org/givenName\": {\n    \"essential\": true\n   },\n   \"https://schema.org/familyName\": {\n    \"essential\": true\n   },\n   \"https://issuer.example.com/alumniOf\": {\n    \"essential\": true\n   }\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Update an Offer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issuerDid\": \"<string>\",\n    \"issuerDescription\": \"<string>\",\n    \"provider\": \"<uuid>\",\n    \"credentialDescription\": \"<string>\",\n    \"claims\": {\n        \"credential\": \"<object>\"\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/offers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"offers",
								":id"
							],
							"variable": [
								{
									"id": "c2622572-c0eb-4ed0-84b6-90f1bb2ac5f4",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Offer ID"
								}
							]
						},
						"description": "To update a Credential Offer by providing an Offer ID and a replacement Offer payload.\n\nThe Offer `id` must be formatted as a UUID.\n\nThe same validation rules apply as create an offer\n* The `issuerDid` must exist in the tenant.\n* The provider must match the ID of a federated OpenID Provider that is configured in the tenant.\n\n\n#### Returns\nThe entire Credential Offer object\n"
					},
					"response": [
						{
							"name": "The Offer is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n    \"issuerDescription\": \"My Issuer\",\n    \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n    \"credentialDescription\": \"University Attendance Credential\",\n    \"claims\": {\n        \"credential\": {\n            \"https://schema.org/givenName\": {\n                \"essential\": true\n            },\n            \"https://schema.org/familyName\": {\n                \"essential\": true\n            },\n            \"https://issuer.example.com/alumniOf\": {\n                \"essential\": true\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Could not find offer\",\n \"details\": {\n  \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47052\"\n }\n}"
						},
						{
							"name": "Bad request, an error in the request body, see message and details for information",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n    \"issuerDescription\": \"My Issuer\",\n    \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n    \"credentialDescription\": \"University Attendance Credential\",\n    \"claims\": {\n        \"credential\": {\n            \"https://schema.org/givenName\": {\n                \"essential\": true\n            },\n            \"https://schema.org/familyName\": {\n                \"essential\": true\n            },\n            \"https://issuer.example.com/alumniOf\": {\n                \"essential\": true\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"msg\": \"Invalid value\",\n   \"param\": \"provider\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully updated a offer",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerDid\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n    \"issuerDescription\": \"My Issuer\",\n    \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n    \"credentialDescription\": \"University Attendance Credential\",\n    \"claims\": {\n        \"credential\": {\n            \"https://schema.org/givenName\": {\n                \"essential\": true\n            },\n            \"https://schema.org/familyName\": {\n                \"essential\": true\n            },\n            \"https://issuer.example.com/alumniOf\": {\n                \"essential\": true\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/offers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"offers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"domain\": \"tenant.platform.mattr.global\",\n \"offerId\": \"5265c310-910b-11ea-a864-b9138dd47051\",\n \"purpose\": \"credential_offer\",\n \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n \"issuerDescription\": \"My Issuer\",\n \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n \"credentialDescription\": \"University Attendance Credential\",\n \"claims\": {\n  \"credential\": {\n   \"https://schema.org/givenName\": {\n    \"essential\": true\n   },\n   \"https://schema.org/familyName\": {\n    \"essential\": true\n   },\n   \"https://issuer.example.com/alumniOf\": {\n    \"essential\": true\n   }\n  }\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Revocation",
			"item": [
				{
					"name": "Retrieve Credential Revocation Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id",
								"revocation-status"
							],
							"variable": [
								{
									"id": "984b1cfc-3376-485d-91dd-26493e1de2b0",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Retrieve the revocation status of a certain credential.\n\n\n#### Returns\nThe revocation status of the credential"
					},
					"response": [
						{
							"name": "Credential status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"isRevoked\": false\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"path\",\n   \"msg\": \"credential not revocable\",\n   \"param\": \"id\",\n   \"value\": \"a80a5e7e-1972-4be6-8a4e-2adf09badf24\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Revocation List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/revocation-lists/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"revocation-lists",
								":id"
							],
							"variable": [
								{
									"id": "977d066e-3a26-43a8-aac9-15df81125a7e",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Revocation list ID"
								}
							]
						},
						"description": "Retrieve the revocation list that contains the revocation status of a number of credentials.\n\n\n#### Returns\nThe revocation list"
					},
					"response": [
						{
							"name": "The revocation list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/revocation-lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"revocation-lists",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n \"@context\": [\n  \"https://www.w3.org/2018/credentials/v1\",\n  \"https://w3id.org/vc-revocation-list-2020/v1\"\n ],\n \"type\": [\n  \"VerifiableCredential\",\n  \"RevocationList2020Credential\"\n ],\n \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n \"credentialSubject\": {\n  \"type\": \"RevocationList2020\",\n  \"encodedList\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\"\n },\n \"proof\": {\n  \"type\": \"Ed25519Signature2018\",\n  \"created\": \"2020-05-02T12:06:29Z\",\n  \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n  \"proofPurpose\": \"assertionMethod\",\n  \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\"\n }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/revocation-lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"revocation-lists",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				},
				{
					"name": "Set Credential Revocation Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isRevoked\": \"<boolean>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id",
								"revocation-status"
							],
							"variable": [
								{
									"id": "06e34e35-050f-4262-b58a-adf6ad02da9d",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "A credential can be revoked by setting the revocation status.\n"
					},
					"response": [
						{
							"name": "The revocation status has been set",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isRevoked\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isRevoked\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"path\",\n   \"msg\": \"credential not revocable\",\n   \"param\": \"id\",\n   \"value\": \"a80a5e7e-1972-4be6-8a4e-2adf09badf24\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Presentations",
			"item": [
				{
					"name": "Retrieve a List of Presentation Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates?limit=<number>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned templates, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of templates"
								}
							]
						},
						"description": "Get presentation templates"
					},
					"response": [
						{
							"name": "All templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"id\": \"esse nulla dolore Duis\",\n   \"domain\": \"https://tenant.platform.mattr.global\",\n   \"name\": \"alumni_credential_request\",\n   \"query\": [\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": \"<object>\"\n    },\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": \"<object>\"\n    }\n   ]\n  },\n  {\n   \"id\": \"officia voluptate\",\n   \"domain\": \"https://tenant.platform.mattr.global\",\n   \"name\": \"alumni_credential_request\",\n   \"query\": [\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": \"<object>\"\n    },\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": \"<object>\"\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Presentation Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates",
								":id"
							],
							"variable": [
								{
									"id": "4d0bb4f2-38ee-4cf7-8bb3-fdcf0d950508",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Presentation template ID"
								}
							]
						},
						"description": "Get a Presentation Template from its ID"
					},
					"response": [
						{
							"name": "Template returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"consequat qui dolore\",\n \"domain\": \"https://tenant.platform.mattr.global\",\n \"name\": \"alumni_credential_request\",\n \"query\": [\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": \"<object>\"\n  },\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": \"<object>\"\n  }\n ]\n}"
						},
						{
							"name": "Invalid templateId parameter format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Delete Presentation template",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates",
								":id"
							],
							"variable": [
								{
									"id": "ace9ded6-ac4c-4928-b8f2-0356a7455b6e",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Presentation template ID"
								}
							]
						},
						"description": "Delete a Presentation Template"
					},
					"response": [
						{
							"name": "Invalid templateId parameter format",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Template deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Create a Presentation Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"query\": [\n        {\n            \"type\": \"<string>\",\n            \"credentialQuery\": \"<object>\"\n        },\n        {\n            \"type\": \"<string>\",\n            \"credentialQuery\": \"<object>\"\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates"
							]
						},
						"description": "Create a presentation template"
					},
					"response": [
						{
							"name": "Template created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"tenant.platform.mattr.global\",\n    \"name\": \"alumni_credential_request\",\n    \"query\": [\n        {\n            \"type\": \"QueryByExample\",\n            \"credentialQuery\": [\n                {\n                    \"required\": true,\n                    \"reason\": \"We need you to prove your alumni membership.\",\n                    \"example\": {\n                        \"@context\": [\n                            \"https://schema.org\"\n                        ],\n                        \"type\": \"AlumniCredential\",\n                        \"trustedIssuer\": [\n                            {\n                                \"required\": true,\n                                \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n \"domain\": \"tenant.platform.mattr.global\",\n \"name\": \"alumni_credential_request\",\n \"query\": [\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": [\n    {\n     \"required\": true,\n     \"reason\": \"We need you to prove your alumni membership.\",\n     \"example\": {\n      \"@context\": [\n       \"https://schema.org\"\n      ],\n      \"type\": \"AlumniCredential\",\n      \"trustedIssuer\": [\n       {\n        \"required\": true,\n        \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n       }\n      ]\n     }\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Bad request, Invalid request body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"tenant.platform.mattr.global\",\n    \"name\": \"alumni_credential_request\",\n    \"query\": [\n        {\n            \"type\": \"QueryByExample\",\n            \"credentialQuery\": [\n                {\n                    \"required\": true,\n                    \"reason\": \"We need you to prove your alumni membership.\",\n                    \"example\": {\n                        \"@context\": [\n                            \"https://schema.org\"\n                        ],\n                        \"type\": \"AlumniCredential\",\n                        \"trustedIssuer\": [\n                            {\n                                \"required\": true,\n                                \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OIDC Auth",
			"item": [
				{
					"name": "Well Known OpenId Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/openid-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"openid-configuration"
							]
						},
						"description": "The standard OpenID Connect Well Known configuration metadata endpoint for your tenant.\n\nThis endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomain or alias by any party wishing to discover the OpenID Connect capabilities."
					},
					"response": [
						{
							"name": "Returns OpenID configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/.well-known/openid-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										".well-known",
										"openid-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorization_endpoint\": \"https://tenant.platform.mattr.global/v1/oauth/authorize\",\n \"claims_parameter_supported\": false,\n \"claims_supported\": [\n  \"sub\",\n  \"sid\",\n  \"auth_time\",\n  \"iss\"\n ],\n \"code_challenge_methods_supported\": [\n  \"S256\"\n ],\n \"end_session_endpoint\": \"https://tenant.platform.mattr.global/v1/oauth/session/end\",\n \"grant_types_supported\": [\n  \"implicit\",\n  \"authorization_code\",\n  \"refresh_token\"\n ],\n \"id_token_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"issuer\": \"https://tenant.platform.mattr.global\",\n \"jwks_uri\": \"https://tenant.platform.mattr.global/v1/oauth/jwks\",\n \"registration_endpoint\": \"https://tenant.platform.mattr.global/v1/oauth/clients\",\n \"request_object_signing_alg_values_supported\": [\n  \"HS256\",\n  \"RS256\",\n  \"PS256\",\n  \"ES256\",\n  \"EdDSA\"\n ],\n \"request_parameter_supported\": true,\n \"request_uri_parameter_supported\": true,\n \"require_request_uri_registration\": true,\n \"response_modes_supported\": [\n  \"form_post\",\n  \"fragment\",\n  \"query\"\n ],\n \"response_types_supported\": [\n  \"code id_token\",\n  \"code\",\n  \"id_token\",\n  \"none\"\n ],\n \"scopes_supported\": [\n  \"openid\",\n  \"offline_access\"\n ],\n \"subject_types_supported\": [\n  \"public\"\n ],\n \"token_endpoint_auth_methods_supported\": [\n  \"none\",\n  \"client_secret_basic\",\n  \"client_secret_jwt\",\n  \"client_secret_post\",\n  \"private_key_jwt\"\n ],\n \"token_endpoint_auth_signing_alg_values_supported\": [\n  \"HS256\",\n  \"RS256\",\n  \"PS256\",\n  \"ES256\",\n  \"EdDSA\"\n ],\n \"token_endpoint\": \"https://tenant.platform.mattr.global/v1/oauth/token\",\n \"userinfo_endpoint\": \"https://tenant.platform.mattr.global/v1/oauth/me\",\n \"userinfo_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"claim_types_supported\": [\n  \"normal\"\n ]\n}"
						}
					]
				},
				{
					"name": "Authorization Flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/authorize?client_id=<string>&response_type=<string>&scope=<string>&nonce=<string>&prompt=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) id obtained at registration"
								},
								{
									"key": "response_type",
									"value": "<string>",
									"description": "(Required) A combo of code, token, and id_token"
								},
								{
									"key": "scope",
									"value": "<string>",
									"description": "openid is required for authentication requests. Other scopes may also be included."
								},
								{
									"key": "nonce",
									"value": "<string>",
									"description": "A value that is returned in the ID token. It is used to mitigate replay attacks."
								},
								{
									"key": "prompt",
									"value": "<string>"
								}
							]
						},
						"description": "> OIDC Authorize URL"
					},
					"response": [
						{
							"name": "Successful authorization response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "https://eKczLDeIfiKhL.bwllTcKNlRIRAGIlD",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "non sunt"
						}
					]
				},
				{
					"name": "Retrieve Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{}",
									"description": "undefined"
								},
								{
									"key": "client_secret",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "grant_type",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "redirect_uri",
									"value": "<uri>",
									"description": "undefined"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						},
						"description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"cillum\",\n \"token_type\": \"bearer\",\n \"refresh_token\": \"exercitation laborum\",\n \"expires_in\": 44361382,\n \"id_token\": \"reprehenderit pariatur\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"dolore labore enim Ex\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OIDC Clients",
			"item": [
				{
					"name": "Retrieve a Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/clients/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"clients",
								":id"
							],
							"variable": [
								{
									"id": "d647fa54-42f9-42c6-aa08-8fa59dff5b43",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "To retrieve a Client that has been created in the Tenant, you will require;\n* Client ID\n* Client Registration Access token\n\nBoth these values are obtain in the Response when you create a Client."
					},
					"response": [
						{
							"name": "Successfully got a client",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"application_type\": \"web\",\n \"grant_types\": [\n  \"authorization_code\"\n ],\n \"id_token_signed_response_alg\": \"ES256\",\n \"post_logout_redirect_uris\": [],\n \"require_auth_time\": false,\n \"response_types\": [\n  \"code\"\n ],\n \"subject_type\": \"public\",\n \"token_endpoint_auth_method\": \"client_secret_post\",\n \"request_uris\": [],\n \"client_id_issued_at\": 1589184782,\n \"client_id\": \"G1s1EPMml4L0zFd63drft\",\n \"client_name\": \"salesforce-relying-party\",\n \"client_secret_expires_at\": 0,\n \"client_secret\": \"aYzQUXD0djaubzKDxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZNBA6GhsgBwvqf5VVqFw\",\n \"client_uri\": \"https://login.salesforce.com\",\n \"logo_uri\": \"https://salesforce.com/img/logo214.svg\",\n \"redirect_uris\": [\n  \"https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/mattrdid\"\n ],\n \"registration_access_token\": \"zKPKPBjAoemq2Onlysv-Oih_lmBo_kCcDelaKb4C2m\",\n \"registration_client_uri\": \"https://tenant.platform.mattr.global/v1/oauth/clients/G1s1EPMml4L0zFd63drft\"\n}"
						},
						{
							"name": "Unauthorized, invalid token in query parameter",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"invalid_token\",\n \"error_description\": \"invalid token provided\"\n}"
						}
					]
				},
				{
					"name": "Remove a Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/clients/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"clients",
								":id"
							],
							"variable": [
								{
									"id": "66f6bdbe-55a8-452c-8a5e-be1e4c6290de",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "To retrieve a Client that has been created in the Tenant, you will require;\n* Client ID\n* Client Registration Access token\n\nBoth these values are obtain in the Response when you create a Client."
					},
					"response": [
						{
							"name": "Successfully deleted a client",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"<string>\",\n    \"redirect_uris\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id_token_signed_response_alg\": \"<string>\",\n    \"client_name\": \"<string>\",\n    \"client_uri\": \"<uri>\",\n    \"logo_uri\": \"<uri>\",\n    \"response_types\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grant_types\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_endpoint_auth_method\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/clients/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"clients",
								":id"
							],
							"variable": [
								{
									"id": "53dc4240-6108-41dd-87c3-c8545c5d92d8",
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "To update a Client that has been created in the Tenant, you will require;\n* Client ID\n* Client Registration Access token\n\nBoth these values are obtain in the Response when you create a Client."
					},
					"response": [
						{
							"name": "Successfully updated a client",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"G1s1EPMml4L0zFd63drft\",\n    \"client_name\": \"salesforce-relying-party\",\n    \"client_uri\": \"https://login.salesforce.com\",\n    \"logo_uri\": \"https://salesforce.com/img/logo214.svg\",\n    \"redirect_uris\": [\n        \"https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did\"\n    ],\n    \"response_types\": [\n        \"code\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\"\n    ],\n    \"token_endpoint_auth_method\": \"client_secret_post\",\n    \"id_token_signed_response_alg\": \"ES256\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/clients/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"application_type\": \"web\",\n \"grant_types\": [\n  \"implicit, authorization_code\"\n ],\n \"id_token_signed_response_alg\": \"ES256\",\n \"post_logout_redirect_uris\": [\n  \"http://rQJXrMKEphwWVDefO.osPu,p0lpV5BuSPDpSDnrnY-QT6KbA6KsIgWDFO4HNwdwwjKqPaBCMOLWLc3WG.5\",\n  \"https://gvoWxCYoScpZTgqJoJSkQwIaQqlYpu.zjfqMxBiyvR0owQ8aOB7CWCD0wVcEQZsgXqu0HRSjEiKltDmQJrZg\"\n ],\n \"require_auth_time\": true,\n \"response_types\": [\n  \"id_token\",\n  \"code\"\n ],\n \"subject_type\": \"public\",\n \"token_endpoint_auth_method\": \"client_secret_post\",\n \"request_uris\": [\n  \"in\",\n  \"in ad cupidatat sint\"\n ],\n \"client_id_issued_at\": -85509388,\n \"client_id\": \"ex irure laborum reprehenderit\",\n \"client_name\": \"nisi\",\n \"client_secret_expires_at\": \"Excepteur nulla non anim laboris\",\n \"client_secret\": \"veniam anim sunt sed\",\n \"client_uri\": \"http://kIcvSElXziWDJuQfKwGZqPKxUPX.kokDr8f7A,ycGhBBIE0CGflhHt,B17yPCDFIc1.\",\n \"logo_uri\": \"http://nYzCCOwwxBLlMsSAnWfNNpBAaHAQ.iwcqZ+DiqI-HROT0whrNDWYf9jgoBQ69K,QXFx1ge4X5mdF5Oj\",\n \"redirect_uris\": [\n  \"sed labore\",\n  \"veniam laborum in occaecat incididunt\"\n ],\n \"registration_client_uri\": \"http://l.vnpbd7Fo3BijYamjg9AfdlFb4NxzbfLLrsjOZ.wo63wBrqmXbkiUp7qC4j.\",\n \"registration_access_token\": \"sed velit dolor cupidatat cons\"\n}"
						}
					]
				},
				{
					"name": "Create Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_name\": \"<string>\",\n    \"client_uri\": \"<uri>\",\n    \"logo_uri\": \"<uri>\",\n    \"redirect_uris\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"response_types\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grant_types\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_endpoint_auth_method\": \"<string>\",\n    \"id_token_signed_response_alg\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"clients"
							]
						},
						"description": "Relying party clients are required to be created in the system for Authorization and VC Verify flows that are enbled through the OIDC Bridge.\n\nThe Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n"
					},
					"response": [
						{
							"name": "Successfully registered a client",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_name\": \"salesforce-relying-party\",\n    \"client_uri\": \"https://login.salesforce.com\",\n    \"logo_uri\": \"https://salesforce.com/img/logo214.svg\",\n    \"redirect_uris\": [\n        \"https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did\"\n    ],\n    \"response_types\": [\n        \"code\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\"\n    ],\n    \"token_endpoint_auth_method\": \"client_secret_post\",\n    \"id_token_signed_response_alg\": \"ES256\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"application_type\": \"web\",\n \"grant_types\": [\n  \"authorization_code\"\n ],\n \"id_token_signed_response_alg\": \"ES256\",\n \"post_logout_redirect_uris\": [],\n \"require_auth_time\": false,\n \"response_types\": [\n  \"code\"\n ],\n \"subject_type\": \"public\",\n \"token_endpoint_auth_method\": \"client_secret_post\",\n \"request_uris\": [],\n \"client_id_issued_at\": 1589424436,\n \"client_id\": \"QYZbhCNsuabSi7xt-lecK\",\n \"client_name\": \"salesforce-relying-party\",\n \"client_secret_expires_at\": 0,\n \"client_secret\": \"NfKwNVceZs7Bq0dMaOpPMEXjg6mbZiJaIYpvwXbq-q63CfDO3W6botDdl_kgQaeTdQ7x_ku1pyr-ILZ9l1XlSA\",\n \"client_uri\": \"https://login.salesforce.com\",\n \"logo_uri\": \"https://salesforce.com/img/logo214.svg\",\n \"redirect_uris\": [\n  \"https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did\"\n ],\n \"registration_client_uri\": \"https://tenant.platform.mattr.global/v1/oauth/clients/QYZbhCNsuabSi7xt-lecK\",\n \"registration_access_token\": \"Za8Ofpj-TaMD-LxnxbFUn_LLsRRWIkf42973IcJXyF7\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OIDC Federation",
			"item": [
				{
					"name": "Retrieve a Federated Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"providers",
								":id"
							],
							"variable": [
								{
									"id": "5f517a9e-65a6-4a41-a3b3-09087b60b587",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated provider ID"
								}
							]
						},
						"description": "Get federated provider by id\n\nReturns the configuration details of a single Federated Provider.\n\nSee GET `/oauth/federated/providers` for the entire list in the Tenant."
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"378f6120-xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"params\"\n  }\n ]\n}"
						},
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"378f6120-9333-11ea-a425-cd96d122e3e0\",\n \"name\": \"auth2\",\n \"url\": \"https://my.oidc-provider.com\",\n \"clientId\": \"a6qW8EZStidZsghydtGjk2WOe10E3I0UC\",\n \"clientSecret\": \"yDdh8jtN3Ccq8V5LpUm6EC4alknh3btX4qP9XWZldbJxVbUr4fs4hSVEaJfTYEbl\"\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				},
				{
					"name": "Remove a Federated Provider",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"providers",
								":id"
							],
							"variable": [
								{
									"id": "ae6dea9d-6db3-4f2c-8e3a-c08fc3c2b1eb",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated provider ID"
								}
							]
						},
						"description": "Delete specified federated provider"
					},
					"response": [
						{
							"name": "Id not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"378f6120-xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"params\"\n  }\n ]\n}"
						},
						{
							"name": "Delete success, no content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve List of Providers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"providers"
							]
						},
						"description": "Return list of all federated providers in the Tenant."
					},
					"response": [
						{
							"name": "Successful return list of federated providers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"378f6120-9333-11ea-a425-cd96d122e3e0\",\n  \"name\": \"auth1\",\n  \"url\": \"https://dev-gs7o9008.au.auth0.com\",\n  \"clientId\": \"a6qW8EZStidZsGhbe3Mk2WOe10E3I0UC\",\n  \"clientSecret\": \"yDdh8jtN3Ccq8V5LpUm6ECnaHb7dLm9X4qP9XWZldbJxVbUr4fs4hSVEaJfTYEbl\"\n },\n {\n  \"id\": \"51f78c00-933c-11ea-a425-cd96d122e3e0\",\n  \"name\": \"auth2\",\n  \"url\": \"https://dev-gs7o9008.au.auth0.com\",\n  \"clientId\": \"a6qWnHPLm8S22F1i6Gjk2WOe10E3I0UC1\",\n  \"clientSecret\": \"yDdh8jtN3Ccq8V5LpUm6EC4ygZuMqm9mNbGTSk7ldbJxVbUr4fs4hSVEaJfTYEbl\"\n }\n]"
						}
					]
				},
				{
					"name": "Update a Federated Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"providers",
								":id"
							],
							"variable": [
								{
									"id": "f48c57c2-b4ca-4831-b435-92a3f11d1198",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated provider ID"
								}
							]
						},
						"description": "Update specified federated provider"
					},
					"response": [
						{
							"name": "Id not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dev-mattrlabs-jt-auth0\",\n    \"url\": \"https://dev-rol4woao.au.auth0.com\",\n    \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n    \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dev-mattrlabs-jt-auth0\",\n    \"url\": \"https://dev-rol4woao.au.auth0.com\",\n    \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n    \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						},
						{
							"name": "Updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dev-mattrlabs-jt-auth0\",\n    \"url\": \"https://dev-rol4woao.au.auth0.com\",\n    \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n    \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"c0b2e030-7934-11ea-a5e8-7f4f27075f7f\",\n \"name\": \"accounts.google\",\n \"url\": \"https://accounts.google.com\",\n \"clientId\": \"<abc>.apps.googleusercontent.com\",\n \"clientSecret\": \"abcdefg\"\n}"
						}
					]
				},
				{
					"name": "Create a Federated Provider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n    \"clientId\": \"<string>\",\n    \"clientSecret\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"providers"
							]
						},
						"description": "Create new federated provider for this tenant.\n\nIn order for the tenant to issue a new credential, the OIDC bridge will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are stored as a Federated Provider and is referenced in the credential offer.\n\n> The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported` which needs to contain `openid` and `profile`.\n"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dev-mattrlabs-jt-auth0\",\n    \"url\": \"https://dev-rol4woao.au.auth0.com\",\n    \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n    \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"c0b2e030-7934-11ea-a5e8-7f4f27075f7f\",\n \"name\": \"accounts.google\",\n \"url\": \"https://accounts.google.com\",\n \"clientId\": \"<abc>.apps.googleusercontent.com\",\n \"clientSecret\": \"abcdefg\"\n}"
						},
						{
							"name": "Bad Request on invalid url",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"dev-mattrlabs-jt-auth0\",\n    \"url\": \"https://dev-rol4woao.au.auth0.com\",\n    \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n    \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"providers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OIDC Claims Mapping",
			"item": [
				{
					"name": "Retrieve a Claim Mapping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"claims",
								":id"
							],
							"variable": [
								{
									"id": "84557941-de07-4c7a-9692-35f00b9d268c",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated claim ID"
								}
							]
						},
						"description": "Get a federated claim mapping by id.\n\nClaim mappings are used to map OpenID Connect terms to JSON-LD terms.\n"
					},
					"response": [
						{
							"name": "Claim ID Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						},
						{
							"name": "Successfully returned a claim",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"71d07320-94d6-11ea-8772-25c473eab401\",\n \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n \"jsonLdType\": \"AlumniCredential\",\n \"jsonLdTerm\": \"alumniOf\",\n \"oidcTerm\": \"alumni_of\"\n}"
						},
						{
							"name": "Bad Request, claim ID not valid UUID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"71d07320-xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"claimId\",\n   \"location\": \"params\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove a Claim Mapping",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"claims",
								":id"
							],
							"variable": [
								{
									"id": "556af85a-b2cf-4186-8e0f-c6e94d8b026b",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated claim ID"
								}
							]
						},
						"description": "Delete a federated claim from the Tenant"
					},
					"response": [
						{
							"name": "Successfully removed config",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"ut cupidatat sunt consectetur\",\n \"message\": \"Duis et qui adipisicing\",\n \"details\": {}\n}"
						}
					]
				},
				{
					"name": "Retrieve List of Claims Mappings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/claims",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"claims"
							]
						},
						"description": "Returns a list of all federated claims in the Tenant"
					},
					"response": [
						{
							"name": "Returns list of federated Claims",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"e5d6d00e-efb1-4841-a555-5ad667873662\",\n  \"fqnJsonLd\": \"http://schema.org/givenName\",\n  \"jsonLdContext\": \"https://sitesafe.platform.mattr.global/v1\",\n  \"jsonLdType\": \"FoundationPassportCredential\",\n  \"jsonLdTerm\": \"givenName\",\n  \"oidcTerm\": \"given_name\"\n },\n {\n  \"id\": \"e5d6d00e-efb1-4841-a555-5ad667873662\",\n  \"fqnJsonLd\": \"http://schema.org/givenName\",\n  \"jsonLdContext\": \"https://sitesafe.platform.mattr.global/v1\",\n  \"jsonLdType\": \"FoundationPassportCredential\",\n  \"jsonLdTerm\": \"givenName\",\n  \"oidcTerm\": \"given_name\"\n }\n]"
						}
					]
				},
				{
					"name": "Update a Claim Mapping",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fqnJsonLd\": \"<string>\",\n    \"jsonLdContext\": \"<string>\",\n    \"jsonLdType\": \"<string>\",\n    \"jsonLdTerm\": \"<string>\",\n    \"oidcTerm\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"claims",
								":id"
							],
							"variable": [
								{
									"id": "5a493ba3-d87d-4dab-a9ed-fb8a50000174",
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Federated claim ID"
								}
							]
						},
						"description": "Update specified federated claim"
					},
					"response": [
						{
							"name": "Updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n    \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n    \"jsonLdType\": \"AlumniCredential\",\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcTerm\": \"alumni_of\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"eafba430-9658-11ea-830f-591932566a74\",\n \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n \"jsonLdType\": \"AlumniCredential\",\n \"jsonLdTerm\": \"alumniOf\",\n \"oidcTerm\": \"alumni_of\"\n}"
						},
						{
							"name": "Id not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n    \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n    \"jsonLdType\": \"AlumniCredential\",\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcTerm\": \"alumni_of\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n    \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n    \"jsonLdType\": \"AlumniCredential\",\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcTerm\": \"alumni_of\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"msg\": \"Invalid value\",\n   \"param\": \"jsonLdType\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Claim Mapping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fqnJsonLd\": \"<string>\",\n    \"jsonLdContext\": \"<string>\",\n    \"jsonLdType\": \"<string>\",\n    \"jsonLdTerm\": \"<string>\",\n    \"oidcTerm\": \"<string>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/oauth/federated/claims",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"oauth",
								"federated",
								"claims"
							]
						},
						"description": "Creates a new federated claim mapping.\n\nClaim mappings are used to bridge OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential.\n"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n    \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n    \"jsonLdType\": \"AlumniCredential\",\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcTerm\": \"alumni_of\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"eafba430-9658-11ea-830f-591932566a74\",\n \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n \"jsonLdType\": \"AlumniCredential\",\n \"jsonLdTerm\": \"alumniOf\",\n \"oidcTerm\": \"alumni_of\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fqnJsonLd\": \"http://schema.org/alumniOf\",\n    \"jsonLdContext\": \"https://www.w3.org/2018/credentials/v1\",\n    \"jsonLdType\": \"AlumniCredential\",\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcTerm\": \"alumni_of\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/oauth/federated/claims",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"oauth",
										"federated",
										"claims"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"msg\": \"Invalid value\",\n   \"param\": \"jsonLdType\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e327f3aa-1cf1-4296-a970-21fe9f16c8f0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8be05573-d21c-40e7-b581-5f94b7e14353",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "3afd1619-e3f0-4ad8-b17f-c43ee34e3c2c",
			"key": "baseUrl",
			"value": "https://tenant.platform.mattr.global"
		},
		{
			"id": "09a1933d-94c7-48b3-88ea-ab29f967f313",
			"key": "oauth-token-Url",
			"value": "https://mattr-prod.au.auth0.com"
		}
	],
	"protocolProfileBehavior": {}
}