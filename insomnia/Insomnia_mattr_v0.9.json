{"_type":"export","__export_format":4,"__export_date":"2020-11-05T23:29:22.773Z","__export_source":"insomnia.desktop.app:v2020.4.1","resources":[{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165e049a201","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165f25ce1b8","modified":1604606493706,"created":1604602486539,"url":"{{ auth.url }}/oauth/token","name":"Create API Auth Token","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"client_id\": \"{{ auth.client_id }}\",\n  \"client_secret\": \"{{ auth.client_secret }}\",\n  \"audience\": \"{{ auth.audience }}\",\n  \"grant_type\": \"client_credentials\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_7604a01ee9e24688a61fd45e6fff7c22"}],"authentication":{},"metaSortKey":-1604602486539,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165f25ce1b8","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486595,"created":1604602486595,"name":"Security","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486595,"_type":"request_group"},{"_id":"wrk_eeea6b5f60db458dbd4f5e32477ac165","parentId":null,"modified":1604615838753,"created":1604470541123,"name":"MATTR VII Platform API v1","description":"# Introduction\nThe Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\nThe API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n# Authorization\nAccess to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\nThis token is then used in an `authorization` header on all calls idenitfied as requiring `bearerAuth` (this is required for the majorty of management operations).\n\n<SecurityDefinitions />\n\n# Pagination\nMost list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters. \n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://tenant.platform.mattr.global/v1/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n* The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\nRequesting a page after the last value in the list will return an empty `data` object.\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n","scope":null,"_type":"workspace"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165a347155a","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","modified":1604602486587,"created":1604602486587,"url":"{{ base_url }}/.well-known/did-configuration","name":"Well Known DID Configuration","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1604602486587,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486594,"created":1604602486594,"name":"DIDs","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486594,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac16528273b81","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","modified":1604602486586,"created":1604602486586,"url":"{{ base_url }}/v1/dids/{{ id }}","name":"Resolve a DID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486586,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165a397f50a","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","modified":1604607699564,"created":1604602486585,"url":"{{ base_url }}/v1/dids","name":"Retrieve a List of DIDs","description":"","method":"GET","body":{},"parameters":[{"name":"limit","disabled":true,"value":"2","id":"pair_1f9aac740d9d4a0c9ea1b771e29d79aa"},{"name":"cursor","disabled":true,"value":"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h","id":"pair_4d404ffb6524469e8a44d2288eb09a04"}],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486585,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1657814da45","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","modified":1604602486585,"created":1604602486585,"url":"{{ base_url }}/v1/dids/{{ id }}","name":"Delete a DID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486585,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165dfa5b710","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1659da9f426","modified":1604602486584,"created":1604602486584,"url":"{{ base_url }}/v1/dids","name":"Create a DID","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"method\": \"string\",\n  \"options\": {\n    \"keyType\": \"bls12381g2\"\n  }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486584,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1659bad4d69","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165caef62a0","modified":1604602486571,"created":1604602486571,"url":"{{ base_url }}/v1/messaging/sign","name":"Create a JWS with a DID","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"didUrl\": \"did:example:abcdefghijkl#key1\",\n  \"payload\": {\n    \"msg\": \"this is a message\"\n  }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486571,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165caef62a0","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486593,"created":1604602486593,"name":"Messaging","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486593,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1658792500b","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165caef62a0","modified":1604602486570,"created":1604602486570,"url":"{{ base_url }}/v1/messaging/verify","name":"Verify a JWS signed by a DID","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486570,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1656aacd34a","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486583,"created":1604602486583,"url":"{{ base_url }}/v1/credentials","name":"Create a Verifiable Credential","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://www.w3.org/2018/credentials/examples/v1\"\n  ],\n  \"subjectId\": \"did:example:abcdb1f712ebc6f1c276e12ec21\",\n  \"tag\": \"identifier123\",\n  \"type\": \"[VerifiableCredential, AlumniCredential]\",\n  \"claims\": {\n    \"givenName\": \"Jamie\",\n    \"familyName\": \"Doe\",\n    \"alumniOf\": \"<span lang=\\\"en\\\">Example University</span>\"\n  },\n  \"issuer\": {\n    \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n    \"name\": \"https://example.edu/issuers/565049\"\n  },\n  \"persist\": true,\n  \"revocable\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486583,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486592,"created":1604602486592,"name":"Credentials","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486592,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1659d65a1b7","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486582,"created":1604602486582,"url":"{{ base_url }}/v1/credentials","name":"Retrieve List of Credential Data","description":"","method":"GET","body":{},"parameters":[{"name":"tag","disabled":true,"value":"identifier123"},{"name":"type","disabled":true,"value":"AlumniCredential"},{"name":"limit","disabled":true,"value":"2"},{"name":"cursor","disabled":true,"value":"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"}],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486582,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1651145bd63","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486581,"created":1604602486581,"url":"{{ base_url }}/v1/credentials/{{ id }}","name":"Retrieve Credential Data","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486581,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165916bc53a","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486580,"created":1604602486580,"url":"{{ base_url }}/v1/credentials/{{ id }}","name":"Remove Credential Data","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486580,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165fa8be963","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486579,"created":1604602486579,"url":"{{ base_url }}/v1/credentials/offers","name":"Create an Offer","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"issuerDid\": \"did:sov:z6MkqE1LSi97LrgDCTSRQa6whzYg7CAXpEi9MbU6P4f6Rycc\",\n  \"issuerDescription\": \"My Issuer\",\n  \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n  \"credentialDescription\": \"University Attendance Credential\",\n  \"claims\": {\n    \"credential\": {}\n  }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486579,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1658acab5e9","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486577,"created":1604602486577,"url":"{{ base_url }}/v1/credentials/offers","name":"Retrieve List of Offers","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486577,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165eaa87595","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486576,"created":1604602486576,"url":"{{ base_url }}/v1/credentials/offers/{{ id }}","name":"Retrieve an Offer","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1604602486576,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1651a62ac9f","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486575,"created":1604602486575,"url":"{{ base_url }}/v1/credentials/offers/{{ id }}","name":"Update an Offer","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"issuerDid\": \"did:sov:z6MkqE1LSi97LrgDCTSRQa6whzYg7CAXpEi9MbU6P4f6Rycc\",\n  \"issuerDescription\": \"My Issuer\",\n  \"provider\": \"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n  \"credentialDescription\": \"University Attendance Credential\",\n  \"claims\": {\n    \"credential\": {}\n  }\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1604602486575,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac16562f181e5","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165dd097a22","modified":1604602486574,"created":1604602486574,"url":"{{ base_url }}/v1/credentials/offers/{{ id }}","name":"Remove an Offer","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486574,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165ebbebef4","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1656f6bf2c2","modified":1604602486574,"created":1604602486574,"url":"{{ base_url }}/v1/credentials/{{ id }}/revocation-status","name":"Set Credential Revocation Status","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"isRevoked\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486574,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1656f6bf2c2","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486591,"created":1604602486591,"name":"Revocation","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486591,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165efb19716","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1656f6bf2c2","modified":1604602486573,"created":1604602486573,"url":"{{ base_url }}/v1/credentials/{{ id }}/revocation-status","name":"Retrieve Credential Revocation Status","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486573,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1651a241efb","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1656f6bf2c2","modified":1604602486572,"created":1604602486572,"url":"{{ base_url }}/v1/revocation-lists/{{ id }}","name":"Retrieve Revocation List","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1604602486572,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1652b60e9b8","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16525c4116b","modified":1604602486551,"created":1604602486551,"url":"{{ base_url }}/v1/presentations/templates","name":"Create a Presentation Template","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"domain\": \"tenant.platform.mattr.global\",\n  \"name\": \"alumni_credential_request\",\n  \"query\": [\n    {\n      \"type\": \"QueryByExample\",\n      \"credentialQuery\": {}\n    }\n  ]\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486551,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16525c4116b","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486591,"created":1604602486591,"name":"Presentations","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486591,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165361b5a2c","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16525c4116b","modified":1604602486549,"created":1604602486549,"url":"{{ base_url }}/v1/presentations/templates","name":"Retrieve a List of Presentation Templates","description":"","method":"GET","body":{},"parameters":[{"name":"limit","disabled":true,"value":"2"},{"name":"cursor","disabled":true,"value":"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"}],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486549,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165cbd17450","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16525c4116b","modified":1604602486548,"created":1604602486548,"url":"{{ base_url }}/v1/presentations/templates/{{ id }}","name":"Retrieve a Presentation Template","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486548,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1651ddcb2ec","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16525c4116b","modified":1604602486546,"created":1604602486546,"url":"{{ base_url }}/v1/presentations/templates/{{ id }}","name":"Delete Presentation template","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486546,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1655403ea50","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1658bef30fe","modified":1604602486559,"created":1604602486559,"url":"{{ base_url }}/.well-known/openid-configuration","name":"Well Known OpenId Configuration","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1604602486559,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1658bef30fe","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486590,"created":1604602486590,"name":"OIDC Auth","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486590,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165107c09aa","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1658bef30fe","modified":1604602486553,"created":1604602486553,"url":"{{ base_url }}/v1/oauth/token","name":"Retrieve Token","description":"","method":"POST","body":{"mimeType":"application/x-www-form-urlencoded"},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486553,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac16510500aa0","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1658bef30fe","modified":1604602486552,"created":1604602486552,"url":"{{ base_url }}/v1/oauth/authorize","name":"Authorization Flow","description":"","method":"GET","body":{},"parameters":[{"name":"client_id","disabled":false,"value":"string"},{"name":"response_type","disabled":false,"value":"id_token"},{"name":"scope","disabled":true,"value":"openid+email"},{"name":"nonce","disabled":true,"value":"string"},{"name":"prompt","disabled":true,"value":"string"}],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486552,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1655a9611df","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165ac459683","modified":1604607295950,"created":1604602486557,"url":"{{ base_url }}/v1/{{ Provider[1] }}/clients/{{ id }}","name":"Retrieve a Client","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486557,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165ac459683","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486589,"created":1604602486589,"name":"OIDC Clients","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486589,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1657d3ab49d","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165ac459683","modified":1604602486556,"created":1604602486556,"url":"{{ base_url }}/v1/oauth/clients/{{ id }}","name":"Update a Client","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"client_id\": \"string\",\n  \"client_name\": \"string\",\n  \"client_uri\": \"string\",\n  \"logo_uri\": \"string\",\n  \"redirect_uris\": [\n    \"https://www.example.com/callback\"\n  ],\n  \"response_types\": [\n    \"id_token\",\n    \"code\"\n  ],\n  \"grant_types\": [\n    \"implicit\",\n    \"authorization_code\"\n  ],\n  \"token_endpoint_auth_method\": \"client_secret_post\",\n  \"id_token_signed_response_alg\": \"ES256\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486556,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1650e06fe51","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165ac459683","modified":1604602486555,"created":1604602486555,"url":"{{ base_url }}/v1/oauth/clients/{{ id }}","name":"Remove a Client","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486555,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165a81e4855","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac165ac459683","modified":1604602486554,"created":1604602486554,"url":"{{ base_url }}/v1/oauth/clients","name":"Create Client","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"client_name\": \"string\",\n  \"client_uri\": \"string\",\n  \"logo_uri\": \"string\",\n  \"redirect_uris\": [\n    \"https://www.example.com/callback\"\n  ],\n  \"response_types\": [\n    \"id_token\",\n    \"code\"\n  ],\n  \"grant_types\": [\n    \"implicit\",\n    \"authorization_code\"\n  ],\n  \"token_endpoint_auth_method\": \"client_secret_post\",\n  \"id_token_signed_response_alg\": \"ES256\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486554,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165d132fc29","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","modified":1604602486564,"created":1604602486564,"url":"{{ base_url }}/v1/oauth/federated/providers/{{ id }}","name":"Retrieve a Federated Provider","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486564,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486588,"created":1604602486588,"name":"OIDC Federation","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486588,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac16575477796","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","modified":1604602486563,"created":1604602486563,"url":"{{ base_url }}/v1/oauth/federated/providers/{{ id }}","name":"Remove a Federated Provider","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486563,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165cc8bada8","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","modified":1604602486562,"created":1604602486562,"url":"{{ base_url }}/v1/oauth/federated/providers/{{ id }}","name":"Update a Federated Provider","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"name\": \"openid-app-name\",\n  \"url\": \"https://identity.example.com\",\n  \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n  \"clientSecret\": \"abcdefgHNE8DkH6hstd6hahH9L\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486562,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165f038b3d1","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","modified":1604602486561,"created":1604602486561,"url":"{{ base_url }}/v1/oauth/federated/providers","name":"Retrieve List of Providers","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486561,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165f1662d7c","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac16541f088fc","modified":1604602486560,"created":1604602486560,"url":"{{ base_url }}/v1/oauth/federated/providers","name":"Create a Federated Provider","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"name\": \"openid-app-name\",\n  \"url\": \"https://identity.example.com\",\n  \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n  \"clientSecret\": \"abcdefgHNE8DkH6hstd6hahH9L\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486560,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac165b42b9820","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","modified":1604602486569,"created":1604602486569,"url":"{{ base_url }}/v1/oauth/federated/claims/{{ id }}","name":"Retrieve a Claim Mapping","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486569,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486587,"created":1604602486587,"name":"OIDC Claims Mapping","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1604602486587,"_type":"request_group"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac16597f73701","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","modified":1604602486568,"created":1604602486568,"url":"{{ base_url }}/v1/oauth/federated/claims/{{ id }}","name":"Remove a Claim Mapping","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486568,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1659b99f0a9","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","modified":1604602486567,"created":1604602486567,"url":"{{ base_url }}/v1/oauth/federated/claims/{{ id }}","name":"Update a Claim Mapping","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"fqnJsonLd\": \"http://schema.org/givenName\",\n  \"jsonLdContext\": \"https://schema.org\",\n  \"jsonLdType\": \"FoundationPassportCredential\",\n  \"jsonLdTerm\": \"givenName\",\n  \"oidcTerm\": \"given_name\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486567,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1652c843637","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","modified":1604602486566,"created":1604602486566,"url":"{{ base_url }}/v1/oauth/federated/claims","name":"Retrieve List of Claims Mappings","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486566,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1656941a115","parentId":"fld_wrk_eeea6b5f60db458dbd4f5e32477ac1650de2b426","modified":1604602486565,"created":1604602486565,"url":"{{ base_url }}/v1/oauth/federated/claims","name":"Create a Claim Mapping","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"fqnJsonLd\": \"http://schema.org/givenName\",\n  \"jsonLdContext\": \"https://schema.org\",\n  \"jsonLdType\": \"FoundationPassportCredential\",\n  \"jsonLdTerm\": \"givenName\",\n  \"oidcTerm\": \"given_name\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486565,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_eeea6b5f60db458dbd4f5e32477ac1659db75a27","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486544,"created":1604602486544,"url":"{{ base_url }}/oauth/token","name":"/oauth/token","description":"","method":"SERVERS","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1604602486544,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_7ea12290886a9f4bf8ec05c1d6eb47f9f9ce1f65","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604618354618,"created":1604470541225,"name":"Base environment","data":{"base_url":"{{ scheme }}://{{ tenantSubdomain }}{{ base_path }}"},"dataPropertyOrder":{"&":["base_url"]},"color":null,"isPrivate":false,"metaSortKey":1604470541225,"_type":"environment"},{"_id":"jar_7ea12290886a9f4bf8ec05c1d6eb47f9f9ce1f65","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604605875393,"created":1604470541228,"name":"Default Jar","cookies":[{"key":"__cfduid","value":"d2f1e782326f7de671ba4b4d7fb56990c1604605875","expires":"2020-12-05T19:51:15.000Z","domain":"au.auth0.com","path":"/","secure":true,"httpOnly":true,"extensions":["SameSite=Lax"],"hostOnly":false,"creation":"2020-11-05T19:51:15.382Z","lastAccessed":"2020-11-05T19:51:15.382Z","id":"009171140804563382"},{"key":"did","value":"s%3Av0%3A438fad50-1fa0-11eb-9b80-d18933214745.lGDhWTBQ8O5IK%2B9QkNSQB8V5ERSKaoK7CJJk%2BcScX6I","expires":"2021-11-06T01:51:15.000Z","maxAge":31557600,"domain":"mattr-staging.au.auth0.com","path":"/","secure":true,"httpOnly":true,"extensions":["SameSite=None"],"hostOnly":true,"creation":"2020-11-05T19:51:15.384Z","lastAccessed":"2020-11-05T19:51:15.384Z","id":"40259565540302855"},{"key":"did_compat","value":"s%3Av0%3A438fad50-1fa0-11eb-9b80-d18933214745.lGDhWTBQ8O5IK%2B9QkNSQB8V5ERSKaoK7CJJk%2BcScX6I","expires":"2021-11-06T01:51:15.000Z","maxAge":31557600,"domain":"mattr-staging.au.auth0.com","path":"/","secure":true,"httpOnly":true,"hostOnly":true,"creation":"2020-11-05T19:51:15.384Z","lastAccessed":"2020-11-05T19:51:15.384Z","id":"5426645202782443"}],"_type":"cookie_jar"},{"_id":"spc_e57388497222489b83cecaf579f5dc56","parentId":"wrk_eeea6b5f60db458dbd4f5e32477ac165","modified":1604602486600,"created":1604470541138,"fileName":"test","contents":"openapi: 3.0.2\ninfo:\n  title: Platform Core API\n  version: v1\n  description: |\n    # Introduction\n    The Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\n    The API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n    # Authorization\n    Access to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\n    This token is then used in an `authorization` header on all calls idenitfied as requiring `bearerAuth` (this is required for the majorty of management operations).\n\n    <SecurityDefinitions />\n\n    # Pagination\n    Most list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters. \n\n    **Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n    ```\n    GET https://tenant.platform.mattr.global/v1/credentials\n    ?limit=100\n    &cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n    ```\n\n    * The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n    * The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\n    Requesting a page after the last value in the list will return an empty `data` object.\n\n    ``` json\n    {\n    \"data\": []\n    }\n    ```\n\n    Not using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n  contact:\n    email: support@mattr.global\ntags:\n  - name: Security\n  - name: DIDs\n  - name: Messaging\n  - name: Credentials\n  - name: Revocation\n  - name: Presentations\n  - name: OIDC Auth\n  - name: OIDC Clients\n  - name: OIDC Federation\n  - name: OIDC Claims Mapping\nx-tagGroups:\n  - name: Access\n    tags:\n      - Security\n  - name: Platform Core\n    tags:\n      - DIDs\n      - Messaging\n      - Credentials\n      - Revocation\n      - Presentations\n  - name: OIDC Bridge\n    tags:\n      - OIDC Auth\n      - OIDC Clients\n      - OIDC Federation\n      - OIDC Claims Mapping\nsecurity:\n  - bearerAuth: []\npaths:\n  /.well-known/did-configuration:\n    get:\n      security: []\n      tags:\n        - DIDs\n      summary: Well Known DID Configuration\n      description: |\n        Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant.\n\n        See https://identity.foundation/.well-known/resources/did-configuration/\n\n        These entries are automatically configured for **all** DIDs created by the tenant and is used for any party wanting to establish the relationship between domain ownership and the DIDs by exposing cryptographic proofs.\n\n        This endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomian or alias by any party wishing to discover the domain to DID relationship.\n      responses:\n        '200':\n          description: List of DID Configuration entries\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  '@context':\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                  type:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                  issuer:\n                    type: string\n                    minLength: 1\n                  issuanceDate:\n                    type: string\n                    minLength: 1\n                  credentialSubject:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        minLength: 1\n                      origin:\n                        type: string\n                        minLength: 1\n                    required:\n                      - id\n                      - origin\n                  proof:\n                    type: object\n                    properties:\n                      jws:\n                        type: string\n                        minLength: 1\n                      type:\n                        type: string\n                        minLength: 1\n                      created:\n                        type: string\n                        minLength: 1\n                      proofPurpose:\n                        type: string\n                        minLength: 1\n                      verificationMethod:\n                        type: string\n                        minLength: 1\n                    required:\n                      - jws\n                      - type\n                      - created\n                      - proofPurpose\n                      - verificationMethod\n                required:\n                  - '@context'\n                  - type\n                  - issuer\n                  - issuanceDate\n                  - credentialSubject\n                  - proof\n              examples:\n                Example:\n                  value:\n                    entries:\n                      - '@context':\n                          - 'https://www.w3.org/2018/credentials/v1'\n                          - 'https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld'\n                        type:\n                          - VerifiableCredential\n                          - DomainLinkageCredential\n                        issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                        issuanceDate: '2020-11-01T21:33:38.398Z'\n                        credentialSubject:\n                          id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                          origin: tenant.platform.mattr.global\n                        proof:\n                          jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..sOuFZV7lrUdxzOaRrCYoD9bbgxp3oEX1fceFFwxekjvJBzbI_ZzKL8-vPWOoFY200KTPwLYcEPhto0GQfM0iDg\n                          type: Ed25519Signature2018\n                          created: '2020-11-01T21:33:38Z'\n                          proofPurpose: assertionMethod\n                          verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                      - '@context':\n                          - 'https://www.w3.org/2018/credentials/v1'\n                          - 'https://w3c-ccg.github.io/ldp-bbs2020/context/v1'\n                          - 'https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld'\n                        type:\n                          - VerifiableCredential\n                          - DomainLinkageCredential\n                        issuer: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v'\n                        issuanceDate: '2020-11-01T21:33:38.427Z'\n                        credentialSubject:\n                          id: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v'\n                          origin: product-team.platform.staging.mattrlabs.io\n                        proof:\n                          type: BbsBlsSignature2020\n                          created: '2020-11-01T21:33:38Z'\n                          proofValue: itoN9nPf6ut0/IxkNp+qesJOju9hV1BYxFMkP4VynqUxFalmQV4PQ6wJhqz5KJppC39+VL+19CxVjPXUXaIDVGRs7WPDGbLaGeViu1Mm4nZCgJbptdw8HOkkpZZ21SCaTN+bok2IG5XRH+QsBWH/cA==\n                          proofPurpose: assertionMethod\n                          verificationMethod: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v#zUC75v2eWSVhTC9XtyYci1cdrHNze4Wwzgv92GUDXeYQEkfZuu2CavRBVFkk9mnpToxiUMacjgYAx9JBmuoJXWc7YCRDDjTD5ocunta9DJrdmgCdAmuFCUfBPTo4GAnTY7x4582'\n      operationId: wellKnownDidConfig\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/.well-known/did-configuration \\\n              --header 'Accept: application/json'\n  '/v1/dids/{id}':\n    get:\n      tags:\n        - DIDs\n      summary: Resolve a DID\n      description: |-\n        Resolves the DID provided in the path to its DID Document from the DID method and method identifier. The DID Document may contain cryptographic material like a public key and service endpoints.\n\n        Example:\n\n        `did:sov:1234556` -  will be referenced on the Sovrin network\n        `did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9` - the public key is encapsulated in the DID\n\n        #### Returns\n\n        The DID Document is returned along with meta-data already held about the DID by the tenant;\n        - Registration Status: Given there can be a lag in writing on-ledger DIDs this status will be updated over a short timeframe (usually within 10 minutes).\n        - Registered: Timestamp of registration.\n        - Keys: A reference to the Keys in a KMS\n      responses:\n        '200':\n          description: A DID Document and meta-data\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  didDocument:\n                    type: object\n                  registrationStatus:\n                    $ref: '#/paths/~1v1~1dids/post/responses/201/content/application~1json/schema/properties/registrationStatus'\n                  localMetadata:\n                    $ref: '#/paths/~1v1~1dids/post/responses/201/content/application~1json/schema/properties/metadata'\n              examples:\n                'Example did:key':\n                  value:\n                    didDocument:\n                      '@context': 'https://w3.org/ns/did/v1'\n                      id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      publicKey:\n                        - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          type: Ed25519VerificationKey2018\n                          controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          publicKeyBase58: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                      authentication:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      assertionMethod:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      capabilityDelegation:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      capabilityInvocation:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      keyAgreement:\n                        - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G'\n                          type: X25519KeyAgreementKey2019\n                          controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          publicKeyBase58: CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\n                    registrationStatus: COMPLETED\n                    localMetadata:\n                      keys:\n                        - kmsKeyId: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                          didDocumentKeyId: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      registered: 1588562204304\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                '404':\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: resolveDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/dids/did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    delete:\n      tags:\n        - DIDs\n      summary: Delete a DID\n      responses:\n        '204':\n          description: DID successfully deleted\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                '404':\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: deleteDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/dids/did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Single DID urn\n  /v1/dids:\n    get:\n      tags:\n        - DIDs\n      summary: Retrieve a List of DIDs\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned DIDs, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of DIDs\n      description: |\n        Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n      responses:\n        '200':\n          description: A list of DIDs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  nextCursor:\n                    type: string\n                    example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    description: Starting point for next cursor to use in a page\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - did\n                        - localMetadata\n                      properties:\n                        did:\n                          type: string\n                          example: 'did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr'\n                        localMetadata:\n                          $ref: '#/paths/~1v1~1dids/post/responses/201/content/application~1json/schema/properties/metadata'\n              examples:\n                Example:\n                  value:\n                    nextCursor: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    data:\n                      - did: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                        localMetadata:\n                          keys:\n                            - kmsKeyId: 5jFLoKmMPgqWaV1Ler5yaECr6XjDX6DPymZhYpVnLDVh\n                              didDocumentKeyId: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                          registered: 1586312761694\n                      - did: 'did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT'\n                        localMetadata:\n                          keys:\n                            - kmsKeyId: 2ezhxiEP6mgmMoWwaa3KJqS6GhPfYHpQTKvCAtPYCib5\n                              didDocumentKeyId: 'did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT#z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT'\n                          registered: 1586841097944\n      operationId: retrieveListOfDids\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/dids \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    post:\n      tags:\n        - DIDs\n      summary: Create a DID\n      description: |-\n        Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\n        Methods supported:\n        - key\n        - web\n        - sov\n\n        > During Preview any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n        #### Creating did:key\n        A DID with a DID method of key can be created as follows.\n\n        * `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n        * `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\n        If no options are provided, a DID will be created with an ed25519 key type.\n\n        If the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n        > A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n        #### Creating did:web\n        A DID with a DID method of web can be created as follows.\n\n        * `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\n        The returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\n        When the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\n        Once the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\n        Note that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.platform.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n        #### Creating did:sov\n        A DID with a DID method of sov can be created as follows.\n\n        * `{\"method\": \"sov\"}`\n\n        The Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n\n        #### Returns\n        The DID, associated metadata and registration status.\n\n        Unsupported Methods result in a 400 response with an \"Invalid value\" message.\n      requestBody:\n        description: Options for creating the decentralized identifier\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                method:\n                  type: string\n                  enum:\n                    - key\n                    - web\n                    - sov\n                options:\n                  type: object\n                  description: 'To define a key type for a did:key or to define a domain for did:web'\n                  minItems: 1\n                  example:\n                    keyType: bls12381g2\n              required:\n                - method\n              description: ''\n              title: ''\n            examples:\n              'Create did:key':\n                value:\n                  method: key\n                  options:\n                    keyType: ed25519\n      responses:\n        '201':\n          description: DID document created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  registrationStatus:\n                    type: string\n                    enum:\n                      - COMPLETED\n                      - PROCESSING\n                  did:\n                    type: string\n                    example: 'did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr'\n                  metadata:\n                    type: object\n                    required:\n                      - keys\n                    properties:\n                      registered:\n                        type: number\n                        description: Timestamp of when the DID was registered\n                        example: 1583233799656\n                      keys:\n                        type: array\n                        description: An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.\n                        items:\n                          type: object\n                          properties:\n                            kmsKeyId:\n                              type: string\n                              example: ad8facc7-e7f6-4af6-9baa-2f7abd71c928\n                            didDocumentKeyId:\n                              type: string\n                              example: 'did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH'\n                      initialDidDocument:\n                        type: object\n                        description: The DID document that was created for the DID\n                        items:\n                          $ref: '#/paths/~1v1~1dids~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/didDocument'\n              examples:\n                'did:key':\n                  value:\n                    did: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n                    registrationStatus: COMPLETED\n                    localMetadata:\n                      keys:\n                        - kmsKeyId: D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\n                          didDocumentKeyId: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n                      registered: 1588741969938\n                      initialDidDocument:\n                        '@context': 'https://w3.org/ns/did/v1'\n                        id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        publicKey:\n                          - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            type: Ed25519VerificationKey2018\n                            controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            publicKeyBase58: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                        authentication:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        assertionMethod:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        capabilityDelegation:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        capabilityInvocation:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        keyAgreement:\n                          - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G'\n                            type: X25519KeyAgreementKey2019\n                            controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            publicKeyBase58: CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - code\n                  - message\n                properties:\n                  code:\n                    type: string\n                  message:\n                    type: string\n                  details:\n                    type: object\n              examples:\n                Unsupported method:\n                  value:\n                    code: BadRequest\n                    message: Bad Request\n                    details:\n                      - value: xxx\n                        msg: Invalid value\n                        param: method\n                        location: body\n      operationId: createDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/dids \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{   \"method\":\"key\",\n                          \"options\": {\n                              \"keyType\":\"ed25519\"\n                          }\n                      }'\n  /v1/credentials:\n    post:\n      tags:\n        - Credentials\n      summary: Create a Verifiable Credential\n      requestBody:\n        description: The credential payload\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                '@context':\n                  type: array\n                  description: 'Additional to any JSON-LD contexts ''https://www.w3.org/2018/credentials/v1'' is always required.'\n                  minLength: 1\n                  example:\n                    - 'https://www.w3.org/2018/credentials/v1'\n                    - 'https://www.w3.org/2018/credentials/examples/v1'\n                  items:\n                    type: string\n                subjectId:\n                  type: string\n                  description: 'Generally a DID, identifier of who/what the subject is'\n                  example: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n                  minLength: 1\n                tag:\n                  type: string\n                  description: 'An optional tag to filter by, will not be part of the issued credential'\n                  example: identifier123\n                  minLength: 1\n                  maxLength: 1024\n                type:\n                  type: array\n                  example: '[VerifiableCredential, AlumniCredential]'\n                  description: 'Types for the Credential, VerifiableCredential must be the first value'\n                  items:\n                    type: string\n                    description: 'Describes the additional specific types of the claimed data, must be within the scope of @context, resulting credential will always includes VerifiableCredential'\n                claims:\n                  type: object\n                  description: Each value is a claim that is defined by one of the JSON-LD schemas.\n                  minItems: 1\n                  example:\n                    givenName: Jamie\n                    familyName: Doe\n                    alumniOf: <span lang=\"en\">Example University</span>\n                issuer:\n                  type: object\n                  description: Includes Issuer id (DID) and domain name\n                  required:\n                    - id\n                    - name\n                  properties:\n                    id:\n                      type: string\n                      example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                    name:\n                      type: string\n                      example: 'https://example.edu/issuers/565049'\n                persist:\n                  type: boolean\n                  description: Flag to indicate whether the full credential should be stored in platform\n                revocable:\n                  type: boolean\n                  description: Flag to indicate if the credential needs to support revocation\n              required:\n                - '@context'\n                - subjectId\n                - type\n                - claims\n                - issuer\n            examples:\n              Create a Credential:\n                value:\n                  '@context':\n                    - 'https://www.w3.org/2018/credentials/v1'\n                    - 'https://schema.org'\n                  subjectId: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                  type:\n                    - VerifiableCredential\n                    - AlumniCredential\n                  claims:\n                    givenName: Jamie\n                    familyName: Doe\n                    alumniOf: Example University\n                  issuer:\n                    id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    name: Example University\n                  persist: true\n                  tag: identifier123\n                  revocable: true\n      responses:\n        '201':\n          description: Credential created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    example: 231ce576-99ba-466c-855d-0e3cdf770aa6\n                    format: uuid\n                  credential:\n                    $ref: '#/paths/~1v1~1revocation-lists~1%7Bid%7D/get/responses/200/content/application~1json/schema'\n                  tag:\n                    type: string\n                    example: identifier123\n                required:\n                  - id\n                  - credential\n        '400':\n          description: 'Bad request, Invalid request body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      description: |\n        Creates a Verifiable Credential (VC or just Credential) in a JSON-LD format adhering to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n        **Pre-requisites:**\n\n        In general, the SubjectId should have been authentically bound to the subject information made in the claims, for example by using an OpenID Connect authentication flow.\n\n        **Creating the Payload:**\n\n        The Credential is issued using JSON-LD, the `@context` values and the `type` values must be represented so that the claims can be referenced.\n        > The schema `https://www3.org/2018/credentials/v1` is always required in addition any `@context` values, so that the Credential can be referenced.\n\n        > The `type` value of `VerifiableCredential` must be used as the *first* value in the array to conform to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n        **ZKP-enabled BBS+ credential:**\n\n        If you wish to issue a ZKP-enabled Verifiable Credential, the provided `issuer` `id` must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential. Note that the schema `https://w3c-ccg.github.io/ldp-bbs2020/context/v1` will automatically be added to the `@context` in the credential.\n\n        > During Preview this feature is experimental. It may change over time and may require credentials to be reissued.\n\n        **Credential meta-data:**\n\n        Setting the `persist` value to `true` will store the entire credential contents as well as the meta-data on the platform. If set to `false` only the credential meta-data is held on the platform:\n        - `id`\n        - `tag` (optional)\n        - `credentialStatus` (optional)\n        - `issuanceDate`\n\n        The optional `tag` value can be used to externally reference the issued credential.\n\n        #### Returns\n        On success, the Verifiable Credential is always provided in the response along with meta-data.\n        The returned credential should be delivered to the intended Subject.\n      operationId: createCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/credentials \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"@context\":[\"https://www.w3.org/2018/credentials/examples/v1\" , \"https://www.w3.org/2018/credentials/v1\"],\n                       \"subjectId\":\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n                       \"type\":[\"AlumniCredential\"],\n                       \"claims\":{\"givenName\":\"Jamie\",\n                                 \"familyName\":\"Doe\",\n                                 \"alumniOf\":\"Example University\"},\n                       \"issuer\":{\"id\":\"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\",\n                                 \"name\":\"Example University\"},\n                       \"persist\":true,\n                       \"revocable\":true\n                      }'\n    get:\n      tags:\n        - Credentials\n      summary: Retrieve List of Credential Data\n      parameters:\n        - schema:\n            type: string\n            example: identifier123\n          in: query\n          name: tag\n          description: The optional external reference to filter on\n        - schema:\n            type: string\n            example: AlumniCredential\n          in: query\n          name: type\n          description: The optional credential type to filter on\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned credential entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of credential entries\n      responses:\n        '200':\n          description: Returns a page of credentials\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  nextCursor:\n                    type: string\n                    example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    description: Starting point for next cursor to use in a page\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1v1~1credentials~1%7Bid%7D/get/responses/200/content/application~1json/schema'\n              examples:\n                List of credential data:\n                  value:\n                    nextCursor: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    data:\n                      - id: 873277c0-a162-11ea-8a1d-a111119347e6\n                        credential:\n                          '@context':\n                            - 'https://www.w3.org/2018/credentials/v1'\n                            - 'https://schema.org'\n                          type:\n                            - VerifiableCredential\n                            - AlumniCredential\n                          issuer:\n                            id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                            name: 'https://tenant.platform.mattr.global'\n                          issuanceDate: '2020-05-02T12:06:29.156Z'\n                          credentialSubject:\n                            id: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                            givenName: Jamie\n                            familyName: Doe\n                          proof:\n                            type: Ed25519Signature2018\n                            created: '2020-05-02T12:06:29Z'\n                            jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                            proofPurpose: assertionMethod\n                            verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                        tag: identifier123\n                        issuanceDate: '2020-05-02T12:06:29.156Z'\n                      - id: 9043aa74-eb08-11ea-adc1-0242ac120002\n                        tag: identifier124\n                        credentialStatus:\n                          id: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                          type: RevocationList2020Status\n                          revocationListCredential: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                          revocationListIndex: 1\n                        issuanceDate: '2020-10-06T03:21:02.397Z'\n        '400':\n          description: Bad query parameters in request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Cursor not found:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: xxxx\n                        msg: id and createdAt is missing\n                        param: cursor\n                        location: query\n                Limit exceeded:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: '1001'\n                        msg: Invalid value\n                        param: limit\n                        location: query\n      operationId: retrieveListCreds\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/credentials \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |\n        Returns a list of all credential data stored in the tenant.\n\n        **In the list**\n\n        Inside the `data` array, there is an body for each credential issued on the platform, in addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n        > Credentials issued via the OIDC Bridge are set not to be persisted.\n\n        **Pagination**\n\n        Pagination can be controlled by a cursor method using the `cursor`and `limit` query parameters. The `nextCursor` is found at the start of each returned range of credential entries and the `limit` determines how many entries are returned in that request, with a maximum value of `1000`.\n\n        Not using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n        > The optional `tag` filter or the Credential `type` can be used to retrieve credential data.\n  '/v1/credentials/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Credential ID\n    get:\n      tags:\n        - Credentials\n      summary: Retrieve Credential Data\n      responses:\n        '200':\n          description: Credential returned\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: {}\n                properties:\n                  id:\n                    type: string\n                    example: 873277c0-a162-11ea-8a1d-a111119347e6\n                  credential:\n                    $ref: '#/paths/~1v1~1revocation-lists~1%7Bid%7D/get/responses/200/content/application~1json/schema'\n                  tag:\n                    type: string\n                    example: identifier123\n                  credentialStatus:\n                    type: object\n                    description: Credential status location information\n                    properties:\n                      id:\n                        type: string\n                        description: Unique ID for the credential status\n                        example: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                      type:\n                        type: string\n                        description: Indicates that the status contains revocation information\n                        example: RevocationList2020Status\n                      revocationListIndex:\n                        type: integer\n                        example: 1\n                        description: The location within the revocation list for the credential\n                      revocationListCredential:\n                        type: string\n                        description: The location of the revocation list\n                        example: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                  issuanceDate:\n                    type: string\n                    example: '2020-05-02T12:06:29.156Z'\n                required:\n                  - id\n              examples:\n                With persisted credential:\n                  value:\n                    id: 873277c0-a162-11ea-8a1d-a111119347e6\n                    credential:\n                      '@context':\n                        - 'https://www.w3.org/2018/credentials/v1'\n                        - 'https://schema.org'\n                      type:\n                        - VerifiableCredential\n                        - AlumniCredential\n                      issuer:\n                        id: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                        name: 'https://tenant.platform.mattr.global'\n                      issuanceDate: '2020-05-02T12:06:29.156Z'\n                      credentialStatus:\n                        id: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                        type: RevocationList2020Status\n                        revocationListCredential: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                        revocationListIndex: 4\n                      credentialSubject:\n                        id: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                        givenName: Jamie\n                        familyName: Doe\n                      proof:\n                        type: Ed25519Signature2018\n                        created: '2020-05-02T12:06:29Z'\n                        jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                        proofPurpose: assertionMethod\n                        verificationMethod: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                    tag: identifier123\n                    credentialStatus:\n                      id: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                      type: RevocationList2020Status\n                      revocationListCredential: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                      revocationListIndex: 4\n                    issuanceDate: '2020-05-02T12:06:29.156Z'\n                No persisted credential:\n                  value:\n                    id: 9043aa74-eb08-11ea-adc1-0242ac120002\n                    tag: identifier124\n        '400':\n          description: Credential ID not in a UUID format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      operationId: retrieveCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/credentials/873277c0-a162-11ea-8a1d-a111119347e6 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Get data for a previously created credential using its ID.\n\n        In addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n        > Credentials issued via the OIDC Bridge do not have their contents persisted.\n    delete:\n      tags:\n        - Credentials\n      summary: Remove Credential Data\n      responses:\n        '204':\n          description: Credential deleted\n        '400':\n          description: Invalid id parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n        '404':\n          description: Credential ID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      operationId: removeCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/credentials/873277c0-a162-11ea-8a1d-a111119347e6 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Remove all stored credential data from the tenant using its ID.\n\n        > The entire entry including meta-data and the credential contents is removed from the system and cannot be recovered.\n  /v1/credentials/offers:\n    post:\n      tags:\n        - Credentials\n      summary: Create an Offer\n      description: |\n        Creates and stores a Credential Offer, returns the Credential Offer with the Offer ID.\n\n        It contain values that can be used for display purposes in a client, like a Mobile Wallet, and essential values required.\n\n        The Offer ID is required to fetch the Offer, which is useful when creating a credential since the credential offer can act as a template for the credential that is being constructed.\n\n        * The `issuerDid` must exist in the tenant.\n        * The provider must match the ID of a federated OpenID Provider that is configured in the tenant.\n\n        **ZKP-enabled BBS+ credential:**\n        If you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n        > ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n\n        #### Returns\n\n        The Offer ID can be used to be encapsulated in a QR Code or deep link and a mobile wallet or other client can resolve this Offer ID to get the full Credential Offer details.\n      requestBody:\n        description: The Credential Offer payload\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                issuerDid:\n                  type: string\n                  example: 'did:sov:z6MkqE1LSi97LrgDCTSRQa6whzYg7CAXpEi9MbU6P4f6Rycc'\n                  description: The DID used in the Credential to be issued\n                issuerDescription:\n                  type: string\n                  description: Display name to appear on client device\n                  example: My Issuer\n                provider:\n                  type: string\n                  example: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                  description: Federated provider ID used for authentication\n                  format: uuid\n                credentialDescription:\n                  type: string\n                  description: Display name to appear on client device\n                  example: University Attendance Credential\n                claims:\n                  type: object\n                  description: The set of claims used in the Credential to be issued\n                  required:\n                    - credential\n                  properties:\n                    credential:\n                      type: object\n                      description: JSON-LD Claims\n              required:\n                - issuerDid\n                - issuerDescription\n                - provider\n                - credentialDescription\n                - claims\n            examples:\n              Example Offer:\n                value:\n                  issuerDid: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n                  issuerDescription: My Issuer\n                  provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                  credentialDescription: University Attendance Credential\n                  claims:\n                    credential:\n                      'https://schema.org/givenName':\n                        essential: true\n                      'https://schema.org/familyName':\n                        essential: true\n                      'https://issuer.example.com/alumniOf':\n                        essential: true\n      responses:\n        '201':\n          description: Credential offer created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offerId:\n                    type: string\n                    format: uuid\n                    example: f31f0f1a-590b-435e-8255-f256d1b1fbf6\n                    description: Unique ID for the Offer\n                  purpose:\n                    type: string\n                    example: credential_offer\n                    description: Defines how the Offer is to be used\n                  domain:\n                    type: string\n                    example: platform.mattr.global\n                    description: Domain of the tenant\n                  issuerDid:\n                    type: string\n                    example: 'did:sov:z6MkqE1LSi97LrgDCTSRQa6whzYg7CAXpEi9MbU6P4f6Rycc'\n                    description: The DID used in the Credential to be issued\n                  issuerDescription:\n                    type: string\n                    description: Display name to appear on client device\n                  provider:\n                    type: string\n                    example: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                    format: uuid\n                    description: Federated provider ID used for authentication\n                  credentialDescription:\n                    type: string\n                    description: Display name to appear on client device\n                  claims:\n                    type: object\n                    description: The set of claims used in the Credential to be issued\n                    properties:\n                      credential:\n                        type: object\n                required:\n                  - offerId\n                  - purpose\n                  - domain\n                  - issuerDid\n                  - issuerDescription\n                  - provider\n                  - credentialDescription\n                  - claims\n              examples:\n                Offer Response:\n                  value:\n                    domain: tenant.platform.mattr.global\n                    offerId: 5265c310-910b-11ea-a864-b9138dd47051\n                    purpose: credential_offer\n                    issuerDid: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    issuerDescription: My Issuer\n                    provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                    credentialDescription: University Attendance Credential\n                    claims:\n                      credential:\n                        'https://schema.org/givenName':\n                          essential: true\n                        'https://schema.org/familyName':\n                          essential: true\n                        'https://issuer.example.com/alumniOf':\n                          essential: true\n        '400':\n          description: 'Bad request, an error in the request body, see message and details for information'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Missing Issuer DID:\n                  value:\n                    code: BadRequest\n                    message: Could not find did\n                    details:\n                      did: 'did:key:xxx'\n      operationId: createOffer\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/credentials/offers \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"issuerDid\":\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n                       \"issuerDescription\":\"My Issuer\",\n                       \"provider\":\"72f7baa0-a3b4-11ea-8f33-67952e8f07d9\",\n                       \"credentialDescription\":\"University Attendance Credential\",\n                       \"claims\":{\n                         \"credential\":{\n                           \"givenName\":{\"essential\":true},\n                           \"familyName\":{\"essential\":true},\n                           \"alumniOf\":{\"essential\":true}\n                         }\n                       }\n                      }'\n    get:\n      tags:\n        - Credentials\n      summary: Retrieve List of Offers\n      responses:\n        '200':\n          description: All offers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/paths/~1v1~1credentials~1offers/post/responses/201/content/application~1json/schema'\n              examples:\n                List of Offers:\n                  value:\n                    - domain: tenant.platform.mattr.global\n                      offerId: 5265c310-910b-11ea-a864-b9138dd47051\n                      purpose: credential_offer\n                      type:\n                        - AlumniCredential\n                      issuerDid: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                      issuerDescription: My Issuer\n                      provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                      credentialDescription: University Attendance Credential\n                      claims:\n                        credential:\n                          'https://schema.org/givenName':\n                            essential: true\n                          'https://schema.org/familyName':\n                            essential: true\n                          'https://issuer.example.com/alumniOf':\n                            essential: true\n                    - offerId: 7950c790-ac36-11ea-9aad-79943aa821f0\n                      purpose: credential_offer\n                      domain: tenant.platform.mattr.global\n                      issuerDid: 'did:key:z6MkreuqFq6WrwozTeGKuUDz8bnd2#lF9g8f3ZB862YdLp7v'\n                      issuerDescription: Another Issuer\n                      provider: 0a79d3b0-a160-11ea-8fcb-4553dffda6c5\n                      credentialDescription: Email Address Credential\n                      claims:\n                        credential:\n                          'http://schema.org/email':\n                            essential: true\n      operationId: retrieveOffers\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/credentials/offers \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Retrieve a list of all Credential Offers\n\n\n        #### Returns\n        The entire list of all Credential Offers in the tenant\n  '/v1/credentials/offers/{id}':\n    get:\n      security: []\n      tags:\n        - Credentials\n      summary: Retrieve an Offer\n      description: |-\n        Retrieve a Credential Offer by providing an Offer ID.\n\n        > This is a publically available endpoint that can be called by any client that has been provided the URL, i.e. via a QR code or deep link.\n\n        The Offer `id` must be formatted as a UUID.\n\n        #### Returns\n        The entire Credential Offer object\n      responses:\n        '200':\n          description: Offer returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1credentials~1offers/post/responses/201/content/application~1json/schema'\n              examples:\n                Offer:\n                  value:\n                    domain: tenant.platform.mattr.global\n                    offerId: 5265c310-910b-11ea-a864-b9138dd47051\n                    purpose: credential_offer\n                    type:\n                      - AlumniCredential\n                    issuerDid: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    issuerDescription: My Issuer\n                    provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                    credentialDescription: University Attendance Credential\n                    claims:\n                      credential:\n                        'https://schema.org/givenName':\n                          essential: true\n                        'https://schema.org/familyName':\n                          essential: true\n                        'https://issuer.example.com/alumniOf':\n                          essential: true\n        '400':\n          description: The Offer `id` parameter is not an UUID format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid ID:\n                  value:\n                    code: BadRequest\n                    message: Bad Request\n                    details:\n                      - value: ac337ea20-xxx\n                        msg: Invalid value\n                        param: offerId\n                        location: params\n        '404':\n          description: The Offer is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Not found:\n                  value:\n                    code: NotFound\n                    message: Could not find offer\n                    details:\n                      offerId: 5265c310-910b-11ea-a864-b9138dd47052\n      operationId: retrieveOffer\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/credentials/offers/007ae650-9888-11ea-a51f-098ab8279a04 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1v1~1credentials~1offers/post/requestBody/content/application~1json/schema'\n            examples:\n              Example Offer:\n                value:\n                  issuerDid: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n                  issuerDescription: My Issuer\n                  provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                  credentialDescription: University Attendance Credential\n                  claims:\n                    credential:\n                      'https://schema.org/givenName':\n                        essential: true\n                      'https://schema.org/familyName':\n                        essential: true\n                      'https://issuer.example.com/alumniOf':\n                        essential: true\n        description: Update an offer\n      responses:\n        '200':\n          description: Successfully updated a offer\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1credentials~1offers/post/responses/201/content/application~1json/schema'\n              examples:\n                Updated Offer Response:\n                  value:\n                    domain: tenant.platform.mattr.global\n                    offerId: 5265c310-910b-11ea-a864-b9138dd47051\n                    purpose: credential_offer\n                    issuerDid: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    issuerDescription: My Issuer\n                    provider: 72f7baa0-a3b4-11ea-8f33-67952e8f07d9\n                    credentialDescription: University Attendance Credential\n                    claims:\n                      credential:\n                        'https://schema.org/givenName':\n                          essential: true\n                        'https://schema.org/familyName':\n                          essential: true\n                        'https://issuer.example.com/alumniOf':\n                          essential: true\n        '400':\n          description: 'Bad request, an error in the request body, see message and details for information'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Missing Provider:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - msg: Invalid value\n                        param: provider\n                        location: body\n        '404':\n          description: The Offer is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Offer not found:\n                  value:\n                    code: NotFound\n                    message: Could not find offer\n                    details:\n                      offerId: 5265c310-910b-11ea-a864-b9138dd47052\n      operationId: updateOffer\n      summary: Update an Offer\n      description: |\n        To update a Credential Offer by providing an Offer ID and a replacement Offer payload.\n\n        The Offer `id` must be formatted as a UUID.\n\n        The same validation rules apply as create an offer\n        * The `issuerDid` must exist in the tenant.\n        * The provider must match the ID of a federated OpenID Provider that is configured in the tenant.\n\n\n        #### Returns\n        The entire Credential Offer object\n      tags:\n        - Credentials\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.platform.mattr.global/v1/credentials/offers/007ae650-9888-11ea-a51f-098ab8279a04  \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"issuerDid\":\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n                       \"issuerDescription\":\"My Issuer\",\n                       \"provider\":\"federated_provider\",\n                       \"credentialDescription\":\"University Attendance Credential\",\n                       \"type\":[\"AlumniCredential\"],\n                       \"claims\":{\n                         \"credential\":{\n                           \"givenName\":{\"essential\":true},\n                           \"familyName\":{\"essential\":true},\n                           \"alumniOf\":{\"essential\":true}\n                         }\n                       }\n                      }'\n    delete:\n      tags:\n        - Credentials\n      summary: Remove an Offer\n      description: |\n        Removes a Credential Offer by providing an Offer ID.\n\n        The Offer `id` must be formatted as a UUID.\n      responses:\n        '204':\n          description: Offer deleted\n        '400':\n          description: The Offer `id` parameter is not an UUID format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid ID:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: 5265c310-xxx\n                        msg: Invalid value\n                        param: offerId\n                        location: params\n      operationId: removeOffer\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/credentials/offers/007ae650-9888-11ea-a51f-098ab8279a04 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: 9aec4b50-bb7b-11ea-9a1f-ad52a0277494\n        name: id\n        in: path\n        required: true\n        description: Offer ID\n  '/v1/credentials/{id}/revocation-status':\n    post:\n      tags:\n        - Revocation\n      summary: Set Credential Revocation Status\n      description: |\n        A credential can be revoked by setting the revocation status.\n      requestBody:\n        description: Setting the revocation status\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                isRevoked:\n                  type: boolean\n                  description: 'true if the credential is revoked, false otherwise'\n                  example: false\n              required:\n                - isRevoked\n              description: ''\n              title: ''\n            examples:\n              Example:\n                value:\n                  isRevoked: true\n      responses:\n        '200':\n          description: The revocation status has been set\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Credential not revocable:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: credential not revocable\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Credential does not exist:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: not found\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Revocation list is not found:\n                  value:\n                    code: string\n                    message: string\n                    details: {}\n      operationId: setRevocationStatus\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/credentials/a80a5e7e-1972-4be6-8a4e-2adf09badf24/revocation-status \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"isRevoked\": true}'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n        name: id\n        in: path\n        required: true\n        description: Credential ID\n    get:\n      tags:\n        - Revocation\n      summary: Retrieve Credential Revocation Status\n      responses:\n        '200':\n          description: Credential status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  isRevoked:\n                    type: boolean\n                    description: 'true if the credential is revoked, false otherwise'\n                    example: false\n                required:\n                  - isRevoked\n                description: ''\n                title: ''\n              examples:\n                Revocation Status:\n                  value:\n                    isRevoked: false\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Credential not revocable:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: credential not revocable\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Credential does not exist:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: not found\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Revocation list is not found:\n                  value:\n                    code: string\n                    message: string\n                    details: {}\n      operationId: getRevocationStatus\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/credentials/a80a5e7e-1972-4be6-8a4e-2adf09badf24/revocation-status \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Retrieve the revocation status of a certain credential.\n\n\n        #### Returns\n        The revocation status of the credential\n  '/v1/revocation-lists/{id}':\n    get:\n      tags:\n        - Revocation\n      summary: Retrieve Revocation List\n      responses:\n        '200':\n          description: The revocation list\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  '@context':\n                    type: array\n                    example:\n                      - 'https://www.w3.org/2018/credentials/v1'\n                      - 'https://www.w3.org/2018/credentials/examples/v1'\n                    items:\n                      type: string\n                      minLength: 1\n                      example: '\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\"'\n                  type:\n                    type: array\n                    example:\n                      - VerifiableCredential\n                      - AlumniCredential\n                    items:\n                      type: string\n                      minLength: 1\n                      example: '\"AlumniCredential\", \"VerifiableCredential\"'\n                  issuer:\n                    type: object\n                    description: Includes issuer id (did) and its domain (inside name parameter)\n                    properties:\n                      id:\n                        type: string\n                        example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                      name:\n                        type: string\n                        example: Example University\n                  issuanceDate:\n                    type: string\n                    format: date-time\n                    example: '2020-05-02T12:06:29.156Z'\n                  credentialStatus:\n                    $ref: '#/paths/~1v1~1credentials~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/credentialStatus'\n                  credentialSubject:\n                    type: object\n                    example:\n                      id: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n                      givenName: Jamie\n                      familyName: Doe\n                    properties:\n                      id:\n                        type: string\n                        example: 'did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY'\n                      givenName:\n                        type: string\n                        example: Jamie\n                      familyName:\n                        type: string\n                        example: Doe\n                      alumniOf:\n                        type: string\n                        example: Example University\n                  proof:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        example: Ed25519Signature2018\n                      created:\n                        type: string\n                        format: date-time\n                        example: '2020-05-02T12:06:29Z'\n                      jws:\n                        type: string\n                        description: Compact form of JWS\n                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                      proofPurpose:\n                        type: string\n                        example: assertionMethod\n                      verificationMethod:\n                        type: string\n                        example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                required:\n                  - '@context'\n                  - type\n                  - issuanceDate\n                  - credentialSubject\n                  - proof\n              examples:\n                Revocation List:\n                  value:\n                    id: 'https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                    '@context':\n                      - 'https://www.w3.org/2018/credentials/v1'\n                      - 'https://w3id.org/vc-revocation-list-2020/v1'\n                    type:\n                      - VerifiableCredential\n                      - RevocationList2020Credential\n                    issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    issuanceDate: '2020-05-02T12:06:29.156Z'\n                    credentialSubject:\n                      type: RevocationList2020\n                      encodedList: H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\n                    proof:\n                      type: Ed25519Signature2018\n                      created: '2020-05-02T12:06:29Z'\n                      jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                      proofPurpose: assertionMethod\n                      verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Revocation list is not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: retrieveRevocationList\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      security: []\n      description: |-\n        Retrieve the revocation list that contains the revocation status of a number of credentials.\n\n\n        #### Returns\n        The revocation list\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: cc641396-3750-43c8-b8b8-f30d74eb3fb3\n        name: id\n        in: path\n        required: true\n        description: Revocation list ID\n  /v1/messaging/sign:\n    post:\n      tags:\n        - Messaging\n      summary: Create a JWS with a DID\n      requestBody:\n        description: Sign message request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - didUrl\n                - payload\n              properties:\n                didUrl:\n                  type: string\n                  description: The did keyId that will be used to sign the message with.\n                  example: 'did:example:abcdefghijkl#key1'\n                payload:\n                  type: object\n                  description: A JSON Object plaintext message\n                  example:\n                    msg: this is a message\n      responses:\n        '200':\n          description: Message signed\n          content:\n            application/json:\n              schema:\n                title: SignMessageResponse\n                type: string\n                description: Signed message in a response\n                example: eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg\n                required:\n                  - ciphertext\n        '400':\n          description: Error signing message\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      description: |-\n        Creates a signed message in the form of a JWS (JSON Web Signature) using the DID (Decentralized Identifier) supplied in the request.\n\n        #### Returns\n\n        A JWS in compact serialization form signed by the did supplied in the request\n      operationId: signMessage\n      security:\n        - bearerAuth: []\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/messaging/sign \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"didUrl\":\"did:example:12344#1\", \"payload\": { \"msg\": \"this is a payload\"}}'\n  /v1/messaging/verify:\n    post:\n      tags:\n        - Messaging\n      summary: Verify a JWS signed by a DID\n      requestBody:\n        description: JWS to verify\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                jws:\n                  type: string\n                  description: Compact form of JWS\n                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n            examples:\n              Request:\n                value:\n                  jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n      responses:\n        '200':\n          description: 'Verification has been performed, see response body for result'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  didUrl:\n                    type: string\n                    description: The didUrl included on the jws object\n                    example: 'did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri#z6MkiKdPk7cYsCySi8BgPnjsZpUkb3aoHsBN4NQKQCSDKEdU'\n                  did:\n                    type: string\n                    description: The did parsed from the didUrl\n                    example: 'did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri'\n                  verified:\n                    type: boolean\n                    description: Result of jws verification\n                    example: true\n                  payload:\n                    oneOf:\n                      - type: string\n                      - type: object\n                    description: The payload of the verified message\n              examples:\n                Verified:\n                  value:\n                    payload: payload\n                    didUrl: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    did: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    verified: true\n                Verified false:\n                  value:\n                    payload: payload\n                    didUrl: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    did: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    verified: false\n        '400':\n          description: Invalid JWS\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Verification failed:\n                  value:\n                    code: BadRequest\n                    message: Verification failed\n      description: |-\n        Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\n        One use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n        #### Returns\n\n        Indicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\n        The DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation.\n      operationId: verifyJws\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/messaging/verify \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"jws\":\"eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa3FoNXRlTTRFaVlrQlZOUEppWWh3TUo5RDlNcWRBaTJSb05ZR0pzcEtkcFdFI3o2TWtxaDV0ZU00RWlZa0JWTlBKaVlod01KOUQ5TXFkQWkyUm9OWUdKc3BLZHBXRSJ9.cGF5bG9hZA.ShzO4OlV3Db1Y3KUK5ww4PHB_wW2WF8LxE-pHUkbqDX3LUobaC9DF_72cJd8F3nRQCD8sRRXXoHMHuamB4_ZDg\"}'\n  '/v1/oauth/federated/claims/{id}':\n    parameters:\n      - name: id\n        in: path\n        description: Federated claim ID\n        required: true\n        schema:\n          type: string\n          example: c5cc49e0-963e-11ea-830f-591932566a74\n          format: uuid\n    get:\n      description: |\n        Get a federated claim mapping by id.\n\n        Claim mappings are used to map OpenID Connect terms to JSON-LD terms.\n      responses:\n        '200':\n          description: Successfully returned a claim\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1federated~1claims/post/responses/201/content/application~1json/schema'\n              examples:\n                A claim:\n                  value:\n                    id: 71d07320-94d6-11ea-8772-25c473eab401\n                    fqnJsonLd: 'http://schema.org/alumniOf'\n                    jsonLdContext: 'https://www.w3.org/2018/credentials/v1'\n                    jsonLdType: AlumniCredential\n                    jsonLdTerm: alumniOf\n                    oidcTerm: alumni_of\n        '400':\n          description: 'Bad Request, claim ID not valid UUID'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid UUID:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: 71d07320-xxx\n                        msg: Invalid value\n                        param: claimId\n                        location: params\n        '404':\n          description: Claim ID Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Claim not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      tags:\n        - OIDC Claims Mapping\n      summary: Retrieve a Claim Mapping\n      operationId: retrieveFedClaim\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/claims/9f0665b0-9653-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    delete:\n      description: Delete a federated claim from the Tenant\n      responses:\n        '204':\n          description: Successfully removed config\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      summary: Remove a Claim Mapping\n      operationId: removeFedClaim\n      tags:\n        - OIDC Claims Mapping\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/claims/eafba430-9658-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'components:\n    put:\n      description: Update specified federated claim\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1v1~1oauth~1federated~1claims/post/requestBody/content/application~1json/schema'\n            examples:\n              Update a claim:\n                value:\n                  fqnJsonLd: 'http://schema.org/alumniOf'\n                  jsonLdContext: 'https://www.w3.org/2018/credentials/v1'\n                  jsonLdType: AlumniCredential\n                  jsonLdTerm: alumniOf\n                  oidcTerm: alumni_of\n        description: Update a claim\n      responses:\n        '200':\n          description: Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1federated~1claims/post/responses/201/content/application~1json/schema'\n              examples:\n                Response with claim:\n                  value:\n                    id: eafba430-9658-11ea-830f-591932566a74\n                    fqnJsonLd: 'http://schema.org/alumniOf'\n                    jsonLdContext: 'https://www.w3.org/2018/credentials/v1'\n                    jsonLdType: AlumniCredential\n                    jsonLdTerm: alumniOf\n                    oidcTerm: alumni_of\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid field:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - msg: Invalid value\n                        param: jsonLdType\n                        location: body\n        '404':\n          description: Id not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Id not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      summary: Update a Claim Mapping\n      operationId: updateFedClaim\n      security:\n        - bearerAuth: []\n      tags:\n        - OIDC Claims Mapping\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/claims/eafba430-9658-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"fqnJsonLd\":\"http://schema.org/alumniOf\",\n                       \"jsonLdContext\":\"https://www.w3.org/2018/credentials/v1\",\n                       \"jsonLdType\":\"AlumniCredential\",\n                       \"jsonLdTerm\":\"alumniOf\",\n                       \"oidcTerm\":\"alumni_of\"\n                      }'\n  /v1/oauth/federated/claims:\n    get:\n      description: Returns a list of all federated claims in the Tenant\n      responses:\n        '200':\n          description: Returns list of federated Claims\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/paths/~1v1~1oauth~1federated~1claims/post/responses/201/content/application~1json/schema'\n      tags:\n        - OIDC Claims Mapping\n      summary: Retrieve List of Claims Mappings\n      operationId: retrieveFedClaims\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/claims \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    post:\n      description: |\n        Creates a new federated claim mapping.\n\n        Claim mappings are used to bridge OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: ''\n              properties:\n                fqnJsonLd:\n                  type: string\n                  example: 'http://schema.org/givenName'\n                  description: Fully qualified JSON-LD term\n                jsonLdContext:\n                  type: string\n                  example: 'https://schema.org'\n                  description: Schema where the term is referenced\n                jsonLdType:\n                  type: string\n                  example: FoundationPassportCredential\n                  description: Type used in the credential\n                jsonLdTerm:\n                  type: string\n                  example: givenName\n                  description: The credential claim name in JSON-LD terms\n                oidcTerm:\n                  type: string\n                  example: given_name\n                  description: The credential claim name in OIDC terms\n              required:\n                - fqnJsonLd\n                - jsonLdContext\n                - jsonLdType\n                - jsonLdTerm\n                - oidcTerm\n            examples:\n              Create a claim:\n                value:\n                  fqnJsonLd: 'http://schema.org/alumniOf'\n                  jsonLdContext: 'https://www.w3.org/2018/credentials/v1'\n                  jsonLdType: AlumniCredential\n                  jsonLdTerm: alumniOf\n                  oidcTerm: alumni_of\n        description: Create a claim\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    example: e5d6d00e-efb1-4841-a555-5ad667873662\n                  fqnJsonLd:\n                    type: string\n                    example: 'http://schema.org/givenName'\n                  jsonLdContext:\n                    type: string\n                    example: 'https://sitesafe.platform.mattr.global/v1'\n                  jsonLdType:\n                    type: string\n                    example: FoundationPassportCredential\n                  jsonLdTerm:\n                    type: string\n                    example: givenName\n                  oidcTerm:\n                    type: string\n                    example: given_name\n                x-examples: {}\n              examples:\n                Response with claim:\n                  value:\n                    id: eafba430-9658-11ea-830f-591932566a74\n                    fqnJsonLd: 'http://schema.org/alumniOf'\n                    jsonLdContext: 'https://www.w3.org/2018/credentials/v1'\n                    jsonLdType: AlumniCredential\n                    jsonLdTerm: alumniOf\n                    oidcTerm: alumni_of\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid field:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - msg: Invalid value\n                        param: jsonLdType\n                        location: body\n      summary: Create a Claim Mapping\n      operationId: createFedClaim\n      tags:\n        - OIDC Claims Mapping\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/claims \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"fqnJsonLd\":\"http://schema.org/alumniOf\",\n                       \"jsonLdContext\":\"https://www.w3.org/2018/credentials/v1\",\n                       \"jsonLdType\":\"AlumniCredential\",\n                       \"jsonLdTerm\":\"alumniOf\",\n                       \"oidcTerm\":\"alumni_of\"\n                      }'\n  '/v1/oauth/federated/providers/{id}':\n    parameters:\n      - schema:\n          type: string\n          example: 162b47b0-8357-11ea-8242-39dee06023c5\n          format: uuid\n        name: id\n        in: path\n        required: true\n        description: Federated provider ID\n    get:\n      description: |-\n        Get federated provider by id\n\n        Returns the configuration details of a single Federated Provider.\n\n        See GET `/oauth/federated/providers` for the entire list in the Tenant.\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1federated~1providers/post/responses/201/content/application~1json/schema'\n              examples:\n                A Federated Provider:\n                  value:\n                    id: 378f6120-9333-11ea-a425-cd96d122e3e0\n                    name: auth2\n                    url: 'https://my.oidc-provider.com'\n                    clientId: a6qW8EZStidZsghydtGjk2WOe10E3I0UC\n                    clientSecret: yDdh8jtN3Ccq8V5LpUm6EC4alknh3btX4qP9XWZldbJxVbUr4fs4hSVEaJfTYEbl\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                ID not a UUID:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: 378f6120-xxx\n                        msg: Invalid value\n                        param: id\n                        location: params\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Id Not Found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      tags:\n        - OIDC Federation\n      summary: Retrieve a Federated Provider\n      operationId: retrieveFedProvider\n      security:\n        - bearerAuth: []\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/providers/2af10170-9898-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    delete:\n      description: Delete specified federated provider\n      responses:\n        '204':\n          description: 'Delete success, no content'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Id not UUID:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: 378f6120-xxx\n                        msg: Invalid value\n                        param: id\n                        location: params\n        '404':\n          description: Id not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Id not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      summary: Remove a Federated Provider\n      operationId: removeFedProvider\n      tags:\n        - OIDC Federation\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/providers/2d5f9b00-9899-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      description: Update specified federated provider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1v1~1oauth~1federated~1providers/post/requestBody/content/application~1json/schema'\n            examples:\n              Update Request:\n                value:\n                  name: dev-mattrlabs-jt-auth0\n                  url: 'https://dev-rol4woao.au.auth0.com'\n                  clientId: vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\n                  clientSecret: QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n        description: Update a federated provider\n      responses:\n        '200':\n          description: Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1federated~1providers/post/responses/201/content/application~1json/schema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n        '404':\n          description: Id not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Id not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      summary: Update a Federated Provider\n      operationId: updateFedProvider\n      security:\n        - bearerAuth: []\n      tags:\n        - OIDC Federation\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/providers/2d5f9b00-9899-11ea-830f-591932566a74 \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\":\"Issuer OP name\",\n                       \"url\":\"https://issuer.auth0.com\",\n                       \"clientId\":\"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n                       \"clientSecret\":\"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n                      }'\n  /v1/oauth/federated/providers:\n    get:\n      description: Return list of all federated providers in the Tenant.\n      responses:\n        '200':\n          description: Successful return list of federated providers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      example: c0b2e030-7934-11ea-a5e8-7f4f27075f7f\n                    name:\n                      type: string\n                      example: accounts.google\n                    url:\n                      type: string\n                      example: 'https://accounts.google.com'\n                    clientId:\n                      type: string\n                      example: <abc>.apps.googleusercontent.com\n                    clientSecret:\n                      type: string\n                      example: abcdefg\n              examples:\n                List of Providers:\n                  value:\n                    - id: 378f6120-9333-11ea-a425-cd96d122e3e0\n                      name: auth1\n                      url: 'https://dev-gs7o9008.au.auth0.com'\n                      clientId: a6qW8EZStidZsGhbe3Mk2WOe10E3I0UC\n                      clientSecret: yDdh8jtN3Ccq8V5LpUm6ECnaHb7dLm9X4qP9XWZldbJxVbUr4fs4hSVEaJfTYEbl\n                    - id: 51f78c00-933c-11ea-a425-cd96d122e3e0\n                      name: auth2\n                      url: 'https://dev-gs7o9008.au.auth0.com'\n                      clientId: a6qWnHPLm8S22F1i6Gjk2WOe10E3I0UC1\n                      clientSecret: yDdh8jtN3Ccq8V5LpUm6EC4ygZuMqm9mNbGTSk7ldbJxVbUr4fs4hSVEaJfTYEbl\n      tags:\n        - OIDC Federation\n      summary: Retrieve List of Providers\n      operationId: retrieveListFedProviders\n      security:\n        - bearerAuth: []\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/providers \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    post:\n      description: |\n        Create new federated provider for this tenant.\n\n        In order for the tenant to issue a new credential, the OIDC bridge will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are stored as a Federated Provider and is referenced in the credential offer.\n\n        > The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported` which needs to contain `openid` and `profile`.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: openid-app-name\n                  description: Meaningful name for this provider\n                url:\n                  type: string\n                  example: 'https://identity.example.com'\n                  description: Base url for provider well-known endpoint\n                clientId:\n                  type: string\n                  example: vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\n                  description: Client ID configured in the provider\n                clientSecret:\n                  type: string\n                  example: abcdefgHNE8DkH6hstd6hahH9L\n                  description: Client secret configured in the provider\n              required:\n                - name\n                - url\n                - clientId\n                - clientSecret\n            examples:\n              Create Request:\n                value:\n                  name: dev-mattrlabs-jt-auth0\n                  url: 'https://dev-rol4woao.au.auth0.com'\n                  clientId: vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\n                  clientSecret: QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n        description: Create a federated provider\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    example: c0b2e030-7934-11ea-a5e8-7f4f27075f7f\n                  name:\n                    type: string\n                    example: accounts.google\n                  url:\n                    type: string\n                    example: 'https://accounts.google.com'\n                  clientId:\n                    type: string\n                    example: <abc>.apps.googleusercontent.com\n                  clientSecret:\n                    type: string\n                    example: abcdefg\n        '400':\n          description: Bad Request on invalid url\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      summary: Create a Federated Provider\n      operationId: createFedProvider\n      security:\n        - bearerAuth: []\n      tags:\n        - OIDC Federation\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/oauth/federated/providers \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\":\"Issuer OP name\",\n                       \"url\":\"https://issuer.auth0.com\",\n                       \"clientId\":\"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n                       \"clientSecret\":\"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\"\n                      }'\n  /.well-known/openid-configuration:\n    get:\n      responses:\n        '200':\n          description: Returns OpenID configuration\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  authorization_endpoint:\n                    type: string\n                    format: uri\n                  claims_parameter_supported:\n                    type: boolean\n                  claims_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - sub\n                      - sid\n                      - auth_time\n                      - iss\n                  code_challenge_methods_supported:\n                    type: array\n                    items:\n                      type: string\n                  end_session_endpoint:\n                    type: string\n                    format: uri\n                  grant_types_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - implicit\n                      - authorization_code\n                      - refresh_token\n                  id_token_signing_alg_values_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - HS256\n                      - ES256\n                  jwks_uri:\n                    type: string\n                    format: uri\n                  registration_endpoint:\n                    type: string\n                    format: uri\n                  request_object_signing_alg_values_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - HS256\n                      - ES256\n                  request_parameter_supported:\n                    type: boolean\n                  request_uri_parameter_supported:\n                    type: boolean\n                  require_request_uri_registration:\n                    type: boolean\n                  response_modes_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - form_post\n                      - fragment\n                      - query\n                  response_types_supported:\n                    type: array\n                    items:\n                      type: string\n                  scopes_supported:\n                    type: array\n                    items:\n                      type: string\n                  subject_types_supported:\n                    type: array\n                    items:\n                      type: string\n                  token_endpoint_auth_methods_supported:\n                    type: array\n                    items:\n                      type: string\n                  token_endpoint_auth_signing_alg_values_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - HS256\n                      - ES256\n                  token_endpoint:\n                    type: string\n                    format: uri\n                  userinfo_endpoint:\n                    type: string\n                    format: uri\n                  userinfo_signing_alg_values_supported:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - HS256\n                      - ES256\n                  claim_types_supported:\n                    type: array\n                    items:\n                      type: string\n              examples:\n                OpenId Config:\n                  value:\n                    authorization_endpoint: 'https://tenant.platform.mattr.global/v1/oauth/authorize'\n                    claims_parameter_supported: false\n                    claims_supported:\n                      - sub\n                      - sid\n                      - auth_time\n                      - iss\n                    code_challenge_methods_supported:\n                      - S256\n                    end_session_endpoint: 'https://tenant.platform.mattr.global/v1/oauth/session/end'\n                    grant_types_supported:\n                      - implicit\n                      - authorization_code\n                      - refresh_token\n                    id_token_signing_alg_values_supported:\n                      - HS256\n                      - ES256\n                    issuer: 'https://tenant.platform.mattr.global'\n                    jwks_uri: 'https://tenant.platform.mattr.global/v1/oauth/jwks'\n                    registration_endpoint: 'https://tenant.platform.mattr.global/v1/oauth/clients'\n                    request_object_signing_alg_values_supported:\n                      - HS256\n                      - RS256\n                      - PS256\n                      - ES256\n                      - EdDSA\n                    request_parameter_supported: true\n                    request_uri_parameter_supported: true\n                    require_request_uri_registration: true\n                    response_modes_supported:\n                      - form_post\n                      - fragment\n                      - query\n                    response_types_supported:\n                      - code id_token\n                      - code\n                      - id_token\n                      - none\n                    scopes_supported:\n                      - openid\n                      - offline_access\n                    subject_types_supported:\n                      - public\n                    token_endpoint_auth_methods_supported:\n                      - none\n                      - client_secret_basic\n                      - client_secret_jwt\n                      - client_secret_post\n                      - private_key_jwt\n                    token_endpoint_auth_signing_alg_values_supported:\n                      - HS256\n                      - RS256\n                      - PS256\n                      - ES256\n                      - EdDSA\n                    token_endpoint: 'https://tenant.platform.mattr.global/v1/oauth/token'\n                    userinfo_endpoint: 'https://tenant.platform.mattr.global/v1/oauth/me'\n                    userinfo_signing_alg_values_supported:\n                      - HS256\n                      - ES256\n                    claim_types_supported:\n                      - normal\n      description: |-\n        The standard OpenID Connect Well Known configuration metadata endpoint for your tenant.\n\n        This endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomain or alias by any party wishing to discover the OpenID Connect capabilities.\n      operationId: wellKnownOidcConfig\n      security: []\n      summary: Well Known OpenId Configuration\n      tags:\n        - OIDC Auth\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/.well-known/openid-configuration \\\n              --header 'Accept: application/json'\n  '/v1/oauth/clients/{id}':\n    get:\n      security:\n        - clientRegistrationAuth: []\n      responses:\n        '200':\n          description: Successfully got a client\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1clients/post/responses/201/content/application~1json/schema'\n              examples:\n                A client:\n                  value:\n                    application_type: web\n                    grant_types:\n                      - authorization_code\n                    id_token_signed_response_alg: ES256\n                    post_logout_redirect_uris: []\n                    require_auth_time: false\n                    response_types:\n                      - code\n                    subject_type: public\n                    token_endpoint_auth_method: client_secret_post\n                    request_uris: []\n                    client_id_issued_at: 1589184782\n                    client_id: G1s1EPMml4L0zFd63drft\n                    client_name: salesforce-relying-party\n                    client_secret_expires_at: 0\n                    client_secret: aYzQUXD0djaubzKDxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZNBA6GhsgBwvqf5VVqFw\n                    client_uri: 'https://login.salesforce.com'\n                    logo_uri: 'https://salesforce.com/img/logo214.svg'\n                    redirect_uris:\n                      - 'https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/mattrdid'\n                    registration_access_token: zKPKPBjAoemq2Onlysv-Oih_lmBo_kCcDelaKb4C2m\n                    registration_client_uri: 'https://tenant.platform.mattr.global/v1/oauth/clients/G1s1EPMml4L0zFd63drft'\n        '401':\n          description: 'Unauthorized, invalid token in query parameter'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n              examples:\n                Invalid client access token:\n                  value:\n                    error: invalid_token\n                    error_description: invalid token provided\n      description: |-\n        To retrieve a Client that has been created in the Tenant, you will require;\n        * Client ID\n        * Client Registration Access token\n\n        Both these values are obtain in the Response when you create a Client.\n      parameters: []\n      operationId: retrieveClient\n      tags:\n        - OIDC Clients\n      summary: Retrieve a Client\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/clients/3UGQ3tSKbdVF2wwHCxuAD \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_REGISTRATION_ACCESS_TOKEN'\n    put:\n      security:\n        - clientRegistrationAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - client_id\n                - redirect_uris\n                - id_token_signed_response_alg\n              properties:\n                client_id:\n                  type: string\n                client_name:\n                  type: string\n                client_uri:\n                  type: string\n                  format: uri\n                logo_uri:\n                  type: string\n                  format: uri\n                redirect_uris:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - 'https://www.example.com/callback'\n                response_types:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - id_token\n                    - code\n                grant_types:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - implicit\n                    - authorization_code\n                token_endpoint_auth_method:\n                  type: string\n                  example: client_secret_post\n                id_token_signed_response_alg:\n                  type: string\n                  description: 'Algorithm must match configured jwks, defaults to RS256'\n                  example: ES256\n            examples:\n              Update Client:\n                value:\n                  client_id: G1s1EPMml4L0zFd63drft\n                  client_name: salesforce-relying-party\n                  client_uri: 'https://login.salesforce.com'\n                  logo_uri: 'https://salesforce.com/img/logo214.svg'\n                  redirect_uris:\n                    - 'https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did'\n                  response_types:\n                    - code\n                  grant_types:\n                    - authorization_code\n                  token_endpoint_auth_method: client_secret_post\n                  id_token_signed_response_alg: ES256\n        description: Update a client\n      responses:\n        '200':\n          description: Successfully updated a client\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1oauth~1clients/post/responses/201/content/application~1json/schema'\n      operationId: updateClient\n      summary: Update a Client\n      description: |-\n        To update a Client that has been created in the Tenant, you will require;\n        * Client ID\n        * Client Registration Access token\n\n        Both these values are obtain in the Response when you create a Client.\n      tags:\n        - OIDC Clients\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.platform.mattr.global/v1/oauth/clients/3UGQ3tSKbdVF2wwHCxuAD \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_REGISTRATION_ACCESS_TOKEN' \\\n              --data '{\"client_id\":\" 3UGQ3tSKbdVF2wwHCxuAD\",\n                       \"client_name\":\"Relying party\",\n                       \"client_uri\":\"https://example.com\",\n                       \"logo_uri\":\"http://www.example.com/images/logo.png\",\n                       \"redirect_uris\":[\"https://example.com/callback\"],\n                       \"response_types\":[\"code\"],\n                       \"grant_types\":[\"authorization_code\"],\n                       \"token_endpoint_auth_method\":\"client_secret_post\",\n                       \"id_token_signed_response_alg\":\"ES256\"\n                      }'\n    delete:\n      security:\n        - clientRegistrationAuth: []\n      responses:\n        '204':\n          description: Successfully deleted a client\n      description: |-\n        To retrieve a Client that has been created in the Tenant, you will require;\n        * Client ID\n        * Client Registration Access token\n\n        Both these values are obtain in the Response when you create a Client.\n      operationId: removeClient\n      summary: Remove a Client\n      tags:\n        - OIDC Clients\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.platform.mattr.global/v1/oauth/clients/4V7QMqpbiEd2JHmhbETxo \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_REGISTRATION_ACCESS_TOKEN'\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Client ID\n  /v1/oauth/clients:\n    post:\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                client_name:\n                  type: string\n                client_uri:\n                  type: string\n                  format: uri\n                logo_uri:\n                  type: string\n                  format: uri\n                redirect_uris:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - 'https://www.example.com/callback'\n                response_types:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - id_token\n                    - code\n                grant_types:\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - implicit\n                    - authorization_code\n                token_endpoint_auth_method:\n                  type: string\n                  example: client_secret_post\n                id_token_signed_response_alg:\n                  type: string\n                  description: 'Algorithm must match configured jwks, defaults to RS256'\n                  example: ES256\n            examples:\n              Auth Code Flow:\n                value:\n                  client_name: salesforce-relying-party\n                  client_uri: 'https://login.salesforce.com'\n                  logo_uri: 'https://salesforce.com/img/logo214.svg'\n                  redirect_uris:\n                    - 'https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did'\n                  response_types:\n                    - code\n                  grant_types:\n                    - authorization_code\n                  token_endpoint_auth_method: client_secret_post\n                  id_token_signed_response_alg: ES256\n        description: Create a relying party client\n      responses:\n        '201':\n          description: Successfully registered a client\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  application_type:\n                    type: string\n                    example: web\n                  grant_types:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - 'implicit, authorization_code'\n                  id_token_signed_response_alg:\n                    type: string\n                    example: ES256\n                  post_logout_redirect_uris:\n                    type: array\n                    items:\n                      type: string\n                      format: uri\n                  require_auth_time:\n                    type: boolean\n                  response_types:\n                    type: array\n                    items:\n                      type: string\n                    example:\n                      - id_token\n                      - code\n                  subject_type:\n                    type: string\n                    example: public\n                  token_endpoint_auth_method:\n                    type: string\n                    example: client_secret_post\n                  request_uris:\n                    type: array\n                    items:\n                      type: string\n                  client_id_issued_at:\n                    type: integer\n                  client_id:\n                    type: string\n                  client_name:\n                    type: string\n                  client_secret_expires_at:\n                    type: string\n                  client_secret:\n                    type: string\n                  client_uri:\n                    type: string\n                    format: uri\n                  logo_uri:\n                    type: string\n                    format: uri\n                  redirect_uris:\n                    type: array\n                    items:\n                      type: string\n                  registration_client_uri:\n                    type: string\n                    format: uri\n                  registration_access_token:\n                    type: string\n              examples:\n                Registered client:\n                  value:\n                    application_type: web\n                    grant_types:\n                      - authorization_code\n                    id_token_signed_response_alg: ES256\n                    post_logout_redirect_uris: []\n                    require_auth_time: false\n                    response_types:\n                      - code\n                    subject_type: public\n                    token_endpoint_auth_method: client_secret_post\n                    request_uris: []\n                    client_id_issued_at: 1589424436\n                    client_id: QYZbhCNsuabSi7xt-lecK\n                    client_name: salesforce-relying-party\n                    client_secret_expires_at: 0\n                    client_secret: NfKwNVceZs7Bq0dMaOpPMEXjg6mbZiJaIYpvwXbq-q63CfDO3W6botDdl_kgQaeTdQ7x_ku1pyr-ILZ9l1XlSA\n                    client_uri: 'https://login.salesforce.com'\n                    logo_uri: 'https://salesforce.com/img/logo214.svg'\n                    redirect_uris:\n                      - 'https://login.salesforce.com/services/authcallback/00D2w000003x2hAEAQ/did'\n                    registration_client_uri: 'https://tenant.platform.mattr.global/v1/oauth/clients/QYZbhCNsuabSi7xt-lecK'\n                    registration_access_token: Za8Ofpj-TaMD-LxnxbFUn_LLsRRWIkf42973IcJXyF7\n      tags:\n        - OIDC Clients\n      summary: Create Client\n      operationId: createClient\n      description: |\n        Relying party clients are required to be created in the system for Authorization and VC Verify flows that are enbled through the OIDC Bridge.\n\n        The Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n        > When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/oauth/clients \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"client_name\":\"Relying party\",\n                       \"client_uri\":\"https://example.com\",\n                       \"logo_uri\":\"http://www.example.com/images/logo.png\",\n                       \"redirect_uris\":[\"https://example.com/callback\"],\n                       \"response_types\":[\"code\"],\n                       \"grant_types\":[\"authorization_code\"],\n                       \"token_endpoint_auth_method\":\"client_secret_post\",\n                       \"id_token_signed_response_alg\":\"ES256\"\n                      }'\n  /v1/oauth/token:\n    post:\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    client_id:\n                      oneOf:\n                        - example: G1s1EPMml4L0zFd63R1YP\n                      type: string\n                    client_secret:\n                      type: string\n                      example: aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw\n                    grant_type:\n                      type: string\n                      example: authorization_code\n                    code:\n                      type: string\n                      example: shdT2ks5tg9b\n                    redirect_uri:\n                      type: string\n                      format: uri\n                      example: 'https://my-client-rp.example.com'\n                - type: object\n                  properties:\n                    client_id:\n                      type: string\n                    client_secret:\n                      type: string\n                    grant_type:\n                      type: string\n                      example: authorization_code\n                    refresh_token:\n                      type: string\n                    redirect_uri:\n                      type: string\n                      format: uri\n        description: Token endpoint request\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                  token_type:\n                    type: string\n                    enum:\n                      - bearer\n                  refresh_token:\n                    type: string\n                  expires_in:\n                    type: integer\n                  id_token:\n                    type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      description: |-\n        > OIDC Token endpoint\n\n        The OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`\n      tags:\n        - OIDC Auth\n      summary: Retrieve Token\n      operationId: retrieveToken\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.platform.mattr.global/v1/oauth/token \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/x-www-form-urlencoded' \\\n              --data 'client_id=G1s1EPMml4L0zFd63drft' \\\n              --data 'client_secret=REPLACE_CLIENT_SECRET' \\\n              --data 'grant_type=authorization_code' \\\n              --data 'code=REPLACE_CODE' \\\n              --data 'redirect_uri=https://example.com'\n  /v1/oauth/authorize:\n    get:\n      parameters:\n        - name: client_id\n          in: query\n          description: id obtained at registration\n          required: true\n          schema:\n            type: string\n        - name: response_type\n          in: query\n          description: 'A combo of code, token, and id_token'\n          required: true\n          schema:\n            type: string\n            example: id_token\n        - name: scope\n          in: query\n          description: openid is required for authentication requests. Other scopes may also be included.\n          schema:\n            type: string\n            example: openid+email\n        - name: nonce\n          in: query\n          description: A value that is returned in the ID token. It is used to mitigate replay attacks.\n          schema:\n            type: string\n        - name: prompt\n          in: query\n          schema:\n            type: string\n            enum:\n              - none\n              - consent\n              - login\n              - consent+login\n              - login+consent\n      responses:\n        '302':\n          description: Successful authorization response\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n        '400':\n          description: Bad Request\n          content:\n            text/html:\n              schema:\n                type: string\n      description: '> OIDC Authorize URL'\n      tags:\n        - OIDC Auth\n      operationId: authFlow\n      summary: Authorization Flow\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.platform.mattr.global/v1/oauth/authorize?client_id=G1s1EPMml4L0zFd63drft&response_type=code&scope=openid%20profile\n  /v1/presentations/templates:\n    post:\n      tags:\n        - Presentations\n      summary: Create a Presentation Template\n      requestBody:\n        description: The template\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              title: ''\n              properties:\n                domain:\n                  type: string\n                  example: tenant.platform.mattr.global\n                name:\n                  type: string\n                  example: alumni_credential_request\n                query:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - type\n                      - credentialQuery\n                    properties:\n                      type:\n                        type: string\n                        example: QueryByExample\n                      credentialQuery:\n                        type: object\n                        items:\n                          type: object\n                          required:\n                            - required\n                            - example\n                          properties:\n                            required:\n                              type: boolean\n                            reason:\n                              type: string\n                            example:\n                              type: array\n                              items:\n                                type: object\n                                required:\n                                  - '@context'\n                                  - type\n                                  - trustedIssuer\n                                properties:\n                                  '@context':\n                                    type: array\n                                    description: array of contexts\n                                  type:\n                                    type: string\n                                  trustedIssuer:\n                                    type: array\n                                    description: array of trusted issuers\n                                    items:\n                                      type: object\n                                      required:\n                                        - required\n                                        - issuer\n                                      properties:\n                                        required:\n                                          type: boolean\n                                        issuer:\n                                          type: string\n                    x-examples: {}\n              required:\n                - domain\n                - name\n                - query\n            examples:\n              Create a template:\n                value:\n                  domain: tenant.platform.mattr.global\n                  name: alumni_credential_request\n                  query:\n                    - type: QueryByExample\n                      credentialQuery:\n                        - required: true\n                          reason: We need you to prove your alumni membership.\n                          example:\n                            '@context':\n                              - 'https://schema.org'\n                            type: AlumniCredential\n                            trustedIssuer:\n                              - required: true\n                                issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n      responses:\n        '201':\n          description: Template created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  domain:\n                    type: string\n                    example: 'https://tenant.platform.mattr.global'\n                  name:\n                    type: string\n                    example: alumni_credential_request\n                  query:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1v1~1presentations~1templates/post/requestBody/content/application~1json/schema/properties/query/items'\n                required:\n                  - id\n                  - domain\n                  - name\n                  - query\n              examples:\n                Created:\n                  value:\n                    id: 364b6a1b-3600-4927-a6ac-4d66aa6bbac3\n                    domain: tenant.platform.mattr.global\n                    name: alumni_credential_request\n                    query:\n                      - type: QueryByExample\n                        credentialQuery:\n                          - required: true\n                            reason: We need you to prove your alumni membership.\n                            example:\n                              '@context':\n                                - 'https://schema.org'\n                              type: AlumniCredential\n                              trustedIssuer:\n                                - required: true\n                                  issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n        '400':\n          description: 'Bad request, Invalid request body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      operationId: createPresTemplate\n      description: Create a presentation template\n    get:\n      tags:\n        - Presentations\n      summary: Retrieve a List of Presentation Templates\n      responses:\n        '200':\n          description: All templates\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  nextCursor:\n                    type: string\n                    example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    description: Starting point for next cursor to use in a page\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1v1~1presentations~1templates/post/responses/201/content/application~1json/schema'\n      operationId: retrievePresTemplates\n      description: Get presentation templates\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned templates, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of templates\n  '/v1/presentations/templates/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: Presentation template ID\n        schema:\n          type: string\n    get:\n      tags:\n        - Presentations\n      summary: Retrieve a Presentation Template\n      responses:\n        '200':\n          description: Template returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1presentations~1templates/post/responses/201/content/application~1json/schema'\n        '400':\n          description: Invalid templateId parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      operationId: retrievePresTemplate\n      description: Get a Presentation Template from its ID\n    delete:\n      tags:\n        - Presentations\n      summary: Delete Presentation template\n      responses:\n        '204':\n          description: Template deleted\n        '400':\n          description: Invalid templateId parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1v1~1dids/post/responses/400/content/application~1json/schema'\n      operationId: removePresTemplate\n      description: Delete a Presentation Template\n  /oauth/token:\n    servers:\n      - url: 'https://mattr-prod.au.auth0.com'\n    post:\n      summary: Create API Auth Token\n      operationId: authToken\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    example: s2dgbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6s2dcaEROemRDf5gbRVEwTTVSVFE0TmtZME9UZzVNVEpDTlVJNFJqRTBPREExTmpZMk1qazFPQSJ9.eyJodHRwOi8vbWF0dHIvdGVuYW50LWlkIjoiZWI5ZTdiMTQtMzY2ZS00NzAxLTg4OTctMTIwZmI5MTQ0YmFjIiwiaXNzIjoiaHR0cHM6Ly9tYXR0ci1wcm9kLmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJSZUhOOTJXNHA0TWVkWmJub1dBczUxRWZxVXQ0VDk2Y0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9wbGF0Zm9ybS5tYXR0ci5nbG9iYWwiLCJpYXQiOjE1OTE4NDk4MTMsImV4cCI6MTU5MTkzNjIxMywiYXpwIjoiUmVITjkyVzRwNE1lZFpibm9XQXM1MUVmcVV0NFQ5NmMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.kZt6mteIwNqdXO8CjqnsjENCgMV2-v7VMn2gtiqIuTNSxBZxk1OkeXERMuRcZpxqIjXi7SdHshQZ9wG_Cmrns_7bG5Pq-qiKCjDOK3pi6smvws02GmDH9nK4_el9zJ92_bDA0p4T6pT0ldcSAMya7ZwTz3-PYQ3pwCwiDEMWFXPtGilfHTBDmrzCUcanmErhZcopo8agtnozuIkbdZoKGkEdXO2J59PrAerBwIbhoYYgkreWIZtlbhGHueYj43ymDOHHl3I7s7zAuK1geJX4W3baKzTMPncUyGrHrOS6OI-ZodHs7kDhTyghJ13GxRy9ikAI3mXz79plZw0qxys2ed\n                    description: JWT used for access to APIs requiring bearer token auth\n                  expires_in:\n                    type: number\n                    example: 86400\n                    description: Time in ms to expiry\n                  token_type:\n                    type: string\n                    example: Bearer\n                    description: Denotes token type\n                required:\n                  - access_token\n                  - expires_in\n                  - token_type\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  error_description:\n                    type: string\n              examples:\n                Invalid credentials:\n                  value:\n                    error: access_denied\n                    error_description: Unauthorized\n      description: |-\n        Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\n        You will be provided the required `client_id` and `client_secret` as part of onboarding.\n      security: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                client_id:\n                  type: string\n                  description: Client ID for your tenant\n                  example: htf792W4p4MedZbnoWAs51EfqUt4d2\n                client_secret:\n                  type: string\n                  description: Client seceret for your tenant\n                  example: d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\n                audience:\n                  type: string\n                  description: Use provided value\n                  example: 'https://platform.mattr.global'\n                grant_type:\n                  type: string\n                  description: Use provided value\n                  example: client_credentials\n              required:\n                - client_id\n                - client_secret\n                - audience\n                - grant_type\n            examples:\n              Request:\n                value:\n                  client_id: htf792W4p4MedZbnoWAs51EfqUt4d2\n                  client_secret: d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\n                  audience: 'https://platform.mattr.global'\n                  grant_type: client_credentials\n      tags:\n        - Security\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://mattr-prod.au.auth0.com/oauth/token/ \\\n              --header 'Content-Type: application/json' \\\n              --data '{\"client_id\": \"KWdv9qo9Vnl9rrCRB7sfGKFTp4uO09im\",\n                       \"client_secret\": \"ztJe2GVpOb1_rUo9Vnl9rrCRB7sfGKFTp4uO0DOfLnA5FSz96wbrzgJMQ\",\n                       \"audience\": \"https://platform.mattr.global\",\n                       \"grant_type\": \"client_credentials\"\n                      }'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    clientRegistrationAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: Client registration_access_token\n  schemas: {}\nservers:\n  - url: 'https://tenant.platform.mattr.global'\n    description: Demo Tenant\n","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_7ea12290886a9f4bf8ec05c1d6eb47f9f9ce1f65_sub","parentId":"env_7ea12290886a9f4bf8ec05c1d6eb47f9f9ce1f65","modified":1604618002552,"created":1604602486597,"name":"MATTR Tenant env","data":{"scheme":"https","base_path":"","bearerToken":"{% response 'body', 'req_wrk_eeea6b5f60db458dbd4f5e32477ac165e049a201', 'b64::JC5hY2Nlc3NfdG9rZW4=::46b', 'always', 60 %}","tenantSubdomain":"YOURTENANT","auth":{"url":"https://auth.mattr.global","audience":"https://platform.mattr.global","client_id":"YOURCLIENTID","client_secret":"YOURSECRET"}},"dataPropertyOrder":{"&":["scheme","base_path","bearerToken","tenantSubdomain","auth"],"&~|auth":["url","audience","client_id","client_secret"]},"color":null,"isPrivate":false,"metaSortKey":1604602486597,"_type":"environment"}]}